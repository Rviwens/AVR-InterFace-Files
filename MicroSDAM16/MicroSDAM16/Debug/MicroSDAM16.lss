
MicroSDAM16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e28  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000092  00800060  00000e28  00000ebc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000032a  008000f2  008000f2  00000f4e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f4e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00000fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000238e  00000000  00000000  0000115c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000916  00000000  00000000  000034ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012ae  00000000  00000000  00003e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000690  00000000  00000000  000050b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000798  00000000  00000000  00005740  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000227b  00000000  00000000  00005ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  00008153  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e2       	ldi	r30, 0x28	; 40
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3f       	cpi	r26, 0xF2	; 242
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	24 e0       	ldi	r18, 0x04	; 4
  78:	a2 ef       	ldi	r26, 0xF2	; 242
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 31       	cpi	r26, 0x1C	; 28
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 4e 06 	call	0xc9c	; 0xc9c <main>
  8a:	0c 94 12 07 	jmp	0xe24	; 0xe24 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <USART_init>:
	for(uint32_t t= AddrS; t<=AddrE;t++)
	{	
		SD_WSB(StatusBuff,t,&token);
 
	}		
}
  92:	cf 92       	push	r12
  94:	df 92       	push	r13
  96:	ef 92       	push	r14
  98:	ff 92       	push	r15
  9a:	fc 01       	movw	r30, r24
  9c:	20 93 f2 00 	sts	0x00F2, r18	; 0x8000f2 <__data_end>
  a0:	30 93 f3 00 	sts	0x00F3, r19	; 0x8000f3 <__data_end+0x1>
  a4:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__data_end+0x2>
  a8:	50 93 f5 00 	sts	0x00F5, r21	; 0x8000f5 <__data_end+0x3>
  ac:	9a b1       	in	r25, 0x0a	; 10
  ae:	98 69       	ori	r25, 0x98	; 152
  b0:	9a b9       	out	0x0a, r25	; 10
  b2:	e1 30       	cpi	r30, 0x01	; 1
  b4:	f1 05       	cpc	r31, r1
  b6:	61 f0       	breq	.+24     	; 0xd0 <USART_init+0x3e>
  b8:	e2 30       	cpi	r30, 0x02	; 2
  ba:	f1 05       	cpc	r31, r1
  bc:	69 f0       	breq	.+26     	; 0xd8 <USART_init+0x46>
  be:	ef 2b       	or	r30, r31
  c0:	71 f4       	brne	.+28     	; 0xde <USART_init+0x4c>
  c2:	80 b5       	in	r24, 0x20	; 32
  c4:	8f 7e       	andi	r24, 0xEF	; 239
  c6:	80 bd       	out	0x20, r24	; 32
  c8:	80 b5       	in	r24, 0x20	; 32
  ca:	8f 7d       	andi	r24, 0xDF	; 223
  cc:	80 bd       	out	0x20, r24	; 32
  ce:	07 c0       	rjmp	.+14     	; 0xde <USART_init+0x4c>
  d0:	80 b5       	in	r24, 0x20	; 32
  d2:	80 63       	ori	r24, 0x30	; 48
  d4:	80 bd       	out	0x20, r24	; 32
  d6:	03 c0       	rjmp	.+6      	; 0xde <USART_init+0x4c>
  d8:	80 b5       	in	r24, 0x20	; 32
  da:	80 62       	ori	r24, 0x20	; 32
  dc:	80 bd       	out	0x20, r24	; 32
  de:	67 30       	cpi	r22, 0x07	; 7
  e0:	71 05       	cpc	r23, r1
  e2:	e9 f0       	breq	.+58     	; 0x11e <USART_init+0x8c>
  e4:	3c f4       	brge	.+14     	; 0xf4 <USART_init+0x62>
  e6:	65 30       	cpi	r22, 0x05	; 5
  e8:	71 05       	cpc	r23, r1
  ea:	59 f0       	breq	.+22     	; 0x102 <USART_init+0x70>
  ec:	66 30       	cpi	r22, 0x06	; 6
  ee:	71 05       	cpc	r23, r1
  f0:	91 f0       	breq	.+36     	; 0x116 <USART_init+0x84>
  f2:	23 c0       	rjmp	.+70     	; 0x13a <USART_init+0xa8>
  f4:	68 30       	cpi	r22, 0x08	; 8
  f6:	71 05       	cpc	r23, r1
  f8:	b1 f0       	breq	.+44     	; 0x126 <USART_init+0x94>
  fa:	69 30       	cpi	r22, 0x09	; 9
  fc:	71 05       	cpc	r23, r1
  fe:	d1 f0       	breq	.+52     	; 0x134 <USART_init+0xa2>
 100:	1c c0       	rjmp	.+56     	; 0x13a <USART_init+0xa8>
 102:	80 b5       	in	r24, 0x20	; 32
 104:	8d 7f       	andi	r24, 0xFD	; 253
 106:	80 bd       	out	0x20, r24	; 32
 108:	80 b5       	in	r24, 0x20	; 32
 10a:	8b 7f       	andi	r24, 0xFB	; 251
 10c:	80 bd       	out	0x20, r24	; 32
 10e:	80 b5       	in	r24, 0x20	; 32
 110:	8b 7f       	andi	r24, 0xFB	; 251
 112:	80 bd       	out	0x20, r24	; 32
 114:	12 c0       	rjmp	.+36     	; 0x13a <USART_init+0xa8>
 116:	80 b5       	in	r24, 0x20	; 32
 118:	82 60       	ori	r24, 0x02	; 2
 11a:	80 bd       	out	0x20, r24	; 32
 11c:	0e c0       	rjmp	.+28     	; 0x13a <USART_init+0xa8>
 11e:	80 b5       	in	r24, 0x20	; 32
 120:	84 60       	ori	r24, 0x04	; 4
 122:	80 bd       	out	0x20, r24	; 32
 124:	0a c0       	rjmp	.+20     	; 0x13a <USART_init+0xa8>
 126:	80 b5       	in	r24, 0x20	; 32
 128:	84 60       	ori	r24, 0x04	; 4
 12a:	80 bd       	out	0x20, r24	; 32
 12c:	80 b5       	in	r24, 0x20	; 32
 12e:	82 60       	ori	r24, 0x02	; 2
 130:	80 bd       	out	0x20, r24	; 32
 132:	03 c0       	rjmp	.+6      	; 0x13a <USART_init+0xa8>
 134:	80 b5       	in	r24, 0x20	; 32
 136:	86 60       	ori	r24, 0x06	; 6
 138:	80 bd       	out	0x20, r24	; 32
 13a:	0f 2e       	mov	r0, r31
 13c:	f0 ed       	ldi	r31, 0xD0	; 208
 13e:	cf 2e       	mov	r12, r31
 140:	f2 e1       	ldi	r31, 0x12	; 18
 142:	df 2e       	mov	r13, r31
 144:	f3 e1       	ldi	r31, 0x13	; 19
 146:	ef 2e       	mov	r14, r31
 148:	f1 2c       	mov	r15, r1
 14a:	f0 2d       	mov	r31, r0
 14c:	20 91 f2 00 	lds	r18, 0x00F2	; 0x8000f2 <__data_end>
 150:	30 91 f3 00 	lds	r19, 0x00F3	; 0x8000f3 <__data_end+0x1>
 154:	40 91 f4 00 	lds	r20, 0x00F4	; 0x8000f4 <__data_end+0x2>
 158:	50 91 f5 00 	lds	r21, 0x00F5	; 0x8000f5 <__data_end+0x3>
 15c:	c7 01       	movw	r24, r14
 15e:	b6 01       	movw	r22, r12
 160:	0e 94 8a 06 	call	0xd14	; 0xd14 <__udivmodsi4>
 164:	21 50       	subi	r18, 0x01	; 1
 166:	29 b9       	out	0x09, r18	; 9
 168:	20 91 f2 00 	lds	r18, 0x00F2	; 0x8000f2 <__data_end>
 16c:	30 91 f3 00 	lds	r19, 0x00F3	; 0x8000f3 <__data_end+0x1>
 170:	40 91 f4 00 	lds	r20, 0x00F4	; 0x8000f4 <__data_end+0x2>
 174:	50 91 f5 00 	lds	r21, 0x00F5	; 0x8000f5 <__data_end+0x3>
 178:	c7 01       	movw	r24, r14
 17a:	b6 01       	movw	r22, r12
 17c:	0e 94 8a 06 	call	0xd14	; 0xd14 <__udivmodsi4>
 180:	da 01       	movw	r26, r20
 182:	c9 01       	movw	r24, r18
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	a1 09       	sbc	r26, r1
 188:	b1 09       	sbc	r27, r1
 18a:	89 2f       	mov	r24, r25
 18c:	9a 2f       	mov	r25, r26
 18e:	ab 2f       	mov	r26, r27
 190:	bb 27       	eor	r27, r27
 192:	80 bd       	out	0x20, r24	; 32
 194:	ff 90       	pop	r15
 196:	ef 90       	pop	r14
 198:	df 90       	pop	r13
 19a:	cf 90       	pop	r12
 19c:	08 95       	ret

0000019e <T>:
 19e:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__data_end>
 1a2:	90 91 f3 00 	lds	r25, 0x00F3	; 0x8000f3 <__data_end+0x1>
 1a6:	a0 91 f4 00 	lds	r26, 0x00F4	; 0x8000f4 <__data_end+0x2>
 1aa:	b0 91 f5 00 	lds	r27, 0x00F5	; 0x8000f5 <__data_end+0x3>
 1ae:	89 32       	cpi	r24, 0x29	; 41
 1b0:	93 42       	sbci	r25, 0x23	; 35
 1b2:	a1 05       	cpc	r26, r1
 1b4:	b1 05       	cpc	r27, r1
 1b6:	34 f4       	brge	.+12     	; 0x1c4 <T+0x26>
 1b8:	87 e8       	ldi	r24, 0x87	; 135
 1ba:	93 e1       	ldi	r25, 0x13	; 19
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <T+0x1e>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <T+0x24>
 1c2:	00 00       	nop
 1c4:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__data_end>
 1c8:	90 91 f3 00 	lds	r25, 0x00F3	; 0x8000f3 <__data_end+0x1>
 1cc:	a0 91 f4 00 	lds	r26, 0x00F4	; 0x8000f4 <__data_end+0x2>
 1d0:	b0 91 f5 00 	lds	r27, 0x00F5	; 0x8000f5 <__data_end+0x3>
 1d4:	89 38       	cpi	r24, 0x89	; 137
 1d6:	93 41       	sbci	r25, 0x13	; 19
 1d8:	a1 05       	cpc	r26, r1
 1da:	b1 05       	cpc	r27, r1
 1dc:	34 f4       	brge	.+12     	; 0x1ea <T+0x4c>
 1de:	87 ec       	ldi	r24, 0xC7	; 199
 1e0:	9f ea       	ldi	r25, 0xAF	; 175
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <T+0x44>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <T+0x4a>
 1e8:	00 00       	nop
 1ea:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__data_end>
 1ee:	90 91 f3 00 	lds	r25, 0x00F3	; 0x8000f3 <__data_end+0x1>
 1f2:	a0 91 f4 00 	lds	r26, 0x00F4	; 0x8000f4 <__data_end+0x2>
 1f6:	b0 91 f5 00 	lds	r27, 0x00F5	; 0x8000f5 <__data_end+0x3>
 1fa:	81 3b       	cpi	r24, 0xB1	; 177
 1fc:	94 40       	sbci	r25, 0x04	; 4
 1fe:	a1 05       	cpc	r26, r1
 200:	b1 05       	cpc	r27, r1
 202:	4c f4       	brge	.+18     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
 204:	8f e3       	ldi	r24, 0x3F	; 63
 206:	9d e0       	ldi	r25, 0x0D	; 13
 208:	23 e0       	ldi	r18, 0x03	; 3
 20a:	81 50       	subi	r24, 0x01	; 1
 20c:	90 40       	sbci	r25, 0x00	; 0
 20e:	20 40       	sbci	r18, 0x00	; 0
 210:	e1 f7       	brne	.-8      	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 212:	00 c0       	rjmp	.+0      	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 214:	00 00       	nop
 216:	08 95       	ret

00000218 <USART_TxChar>:
 218:	5d 9b       	sbis	0x0b, 5	; 11
 21a:	fe cf       	rjmp	.-4      	; 0x218 <USART_TxChar>
 21c:	8c b9       	out	0x0c, r24	; 12
 21e:	08 95       	ret

00000220 <USART_Send>:
 220:	0f 93       	push	r16
 222:	1f 93       	push	r17
 224:	cf 93       	push	r28
 226:	df 93       	push	r29
 228:	8c 01       	movw	r16, r24
 22a:	c0 e0       	ldi	r28, 0x00	; 0
 22c:	d0 e0       	ldi	r29, 0x00	; 0
 22e:	05 c0       	rjmp	.+10     	; 0x23a <USART_Send+0x1a>
 230:	0e 94 0c 01 	call	0x218	; 0x218 <USART_TxChar>
 234:	0e 94 cf 00 	call	0x19e	; 0x19e <T>
 238:	21 96       	adiw	r28, 0x01	; 1
 23a:	f8 01       	movw	r30, r16
 23c:	ec 0f       	add	r30, r28
 23e:	fd 1f       	adc	r31, r29
 240:	80 81       	ld	r24, Z
 242:	81 11       	cpse	r24, r1
 244:	f5 cf       	rjmp	.-22     	; 0x230 <USART_Send+0x10>
 246:	df 91       	pop	r29
 248:	cf 91       	pop	r28
 24a:	1f 91       	pop	r17
 24c:	0f 91       	pop	r16
 24e:	08 95       	ret

00000250 <USART_Send_ESS>:
 250:	ef 92       	push	r14
 252:	ff 92       	push	r15
 254:	0f 93       	push	r16
 256:	1f 93       	push	r17
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	8c 01       	movw	r16, r24
 25e:	7b 01       	movw	r14, r22
 260:	c0 e0       	ldi	r28, 0x00	; 0
 262:	d0 e0       	ldi	r29, 0x00	; 0
 264:	09 c0       	rjmp	.+18     	; 0x278 <USART_Send_ESS+0x28>
 266:	f8 01       	movw	r30, r16
 268:	ec 0f       	add	r30, r28
 26a:	fd 1f       	adc	r31, r29
 26c:	80 81       	ld	r24, Z
 26e:	0e 94 0c 01 	call	0x218	; 0x218 <USART_TxChar>
 272:	0e 94 cf 00 	call	0x19e	; 0x19e <T>
 276:	21 96       	adiw	r28, 0x01	; 1
 278:	f8 01       	movw	r30, r16
 27a:	01 90       	ld	r0, Z+
 27c:	00 20       	and	r0, r0
 27e:	e9 f7       	brne	.-6      	; 0x27a <USART_Send_ESS+0x2a>
 280:	31 97       	sbiw	r30, 0x01	; 1
 282:	e0 1b       	sub	r30, r16
 284:	f1 0b       	sbc	r31, r17
 286:	ce 17       	cp	r28, r30
 288:	df 07       	cpc	r29, r31
 28a:	68 f3       	brcs	.-38     	; 0x266 <USART_Send_ESS+0x16>
 28c:	ea 94       	dec	r14
 28e:	ef 28       	or	r14, r15
 290:	79 f4       	brne	.+30     	; 0x2b0 <USART_Send_ESS+0x60>
 292:	80 e2       	ldi	r24, 0x20	; 32
 294:	0e 94 0c 01 	call	0x218	; 0x218 <USART_TxChar>
 298:	0e 94 cf 00 	call	0x19e	; 0x19e <T>
 29c:	8c e7       	ldi	r24, 0x7C	; 124
 29e:	0e 94 0c 01 	call	0x218	; 0x218 <USART_TxChar>
 2a2:	0e 94 cf 00 	call	0x19e	; 0x19e <T>
 2a6:	85 e4       	ldi	r24, 0x45	; 69
 2a8:	0e 94 0c 01 	call	0x218	; 0x218 <USART_TxChar>
 2ac:	0e 94 cf 00 	call	0x19e	; 0x19e <T>
 2b0:	df 91       	pop	r29
 2b2:	cf 91       	pop	r28
 2b4:	1f 91       	pop	r17
 2b6:	0f 91       	pop	r16
 2b8:	ff 90       	pop	r15
 2ba:	ef 90       	pop	r14
 2bc:	08 95       	ret

000002be <USART_Int_Str>:
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	eb 01       	movw	r28, r22
 2c4:	4a e0       	ldi	r20, 0x0A	; 10
 2c6:	6c e7       	ldi	r22, 0x7C	; 124
 2c8:	71 e0       	ldi	r23, 0x01	; 1
 2ca:	0e 94 ac 06 	call	0xd58	; 0xd58 <__itoa_ncheck>
 2ce:	be 01       	movw	r22, r28
 2d0:	8c e7       	ldi	r24, 0x7C	; 124
 2d2:	91 e0       	ldi	r25, 0x01	; 1
 2d4:	0e 94 28 01 	call	0x250	; 0x250 <USART_Send_ESS>
 2d8:	df 91       	pop	r29
 2da:	cf 91       	pop	r28
 2dc:	08 95       	ret

000002de <USART_Int_StrHEXRAW>:
 2de:	0f 93       	push	r16
 2e0:	1f 93       	push	r17
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	ec 01       	movw	r28, r24
 2e8:	8b 01       	movw	r16, r22
 2ea:	40 e1       	ldi	r20, 0x10	; 16
 2ec:	6c e7       	ldi	r22, 0x7C	; 124
 2ee:	71 e0       	ldi	r23, 0x01	; 1
 2f0:	0e 94 ac 06 	call	0xd58	; 0xd58 <__itoa_ncheck>
 2f4:	60 97       	sbiw	r28, 0x10	; 16
 2f6:	34 f4       	brge	.+12     	; 0x304 <USART_Int_StrHEXRAW+0x26>
 2f8:	60 e0       	ldi	r22, 0x00	; 0
 2fa:	70 e0       	ldi	r23, 0x00	; 0
 2fc:	83 e6       	ldi	r24, 0x63	; 99
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	0e 94 28 01 	call	0x250	; 0x250 <USART_Send_ESS>
 304:	b8 01       	movw	r22, r16
 306:	8c e7       	ldi	r24, 0x7C	; 124
 308:	91 e0       	ldi	r25, 0x01	; 1
 30a:	0e 94 28 01 	call	0x250	; 0x250 <USART_Send_ESS>
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	1f 91       	pop	r17
 314:	0f 91       	pop	r16
 316:	08 95       	ret

00000318 <USART_Long_Str>:
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	ea 01       	movw	r28, r20
 31e:	2a e0       	ldi	r18, 0x0A	; 10
 320:	4c e7       	ldi	r20, 0x7C	; 124
 322:	51 e0       	ldi	r21, 0x01	; 1
 324:	0e 94 b7 06 	call	0xd6e	; 0xd6e <__ltoa_ncheck>
 328:	be 01       	movw	r22, r28
 32a:	8c e7       	ldi	r24, 0x7C	; 124
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	0e 94 28 01 	call	0x250	; 0x250 <USART_Send_ESS>
 332:	df 91       	pop	r29
 334:	cf 91       	pop	r28
 336:	08 95       	ret

00000338 <USART_Long_StrHEX>:
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	ea 01       	movw	r28, r20
 33e:	20 e1       	ldi	r18, 0x10	; 16
 340:	4c e7       	ldi	r20, 0x7C	; 124
 342:	51 e0       	ldi	r21, 0x01	; 1
 344:	0e 94 b7 06 	call	0xd6e	; 0xd6e <__ltoa_ncheck>
 348:	be 01       	movw	r22, r28
 34a:	8c e7       	ldi	r24, 0x7C	; 124
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	0e 94 28 01 	call	0x250	; 0x250 <USART_Send_ESS>
 352:	df 91       	pop	r29
 354:	cf 91       	pop	r28
 356:	08 95       	ret

00000358 <CheckRx>:
 358:	40 91 90 01 	lds	r20, 0x0190	; 0x800190 <RXSBWP>
 35c:	50 91 91 01 	lds	r21, 0x0191	; 0x800191 <RXSBWP+0x1>
 360:	fa 01       	movw	r30, r20
 362:	e5 50       	subi	r30, 0x05	; 5
 364:	ff 4f       	sbci	r31, 0xFF	; 255
 366:	80 81       	ld	r24, Z
 368:	8c 37       	cpi	r24, 0x7C	; 124
 36a:	71 f5       	brne	.+92     	; 0x3c8 <CheckRx+0x70>
 36c:	fa 01       	movw	r30, r20
 36e:	e4 50       	subi	r30, 0x04	; 4
 370:	ff 4f       	sbci	r31, 0xFF	; 255
 372:	80 81       	ld	r24, Z
 374:	85 34       	cpi	r24, 0x45	; 69
 376:	41 f5       	brne	.+80     	; 0x3c8 <CheckRx+0x70>
 378:	80 e8       	ldi	r24, 0x80	; 128
 37a:	e1 e9       	ldi	r30, 0x91	; 145
 37c:	f3 e0       	ldi	r31, 0x03	; 3
 37e:	df 01       	movw	r26, r30
 380:	1d 92       	st	X+, r1
 382:	8a 95       	dec	r24
 384:	e9 f7       	brne	.-6      	; 0x380 <CheckRx+0x28>
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	09 c0       	rjmp	.+18     	; 0x39e <CheckRx+0x46>
 38c:	fc 01       	movw	r30, r24
 38e:	e4 50       	subi	r30, 0x04	; 4
 390:	ff 4f       	sbci	r31, 0xFF	; 255
 392:	20 81       	ld	r18, Z
 394:	fc 01       	movw	r30, r24
 396:	e0 57       	subi	r30, 0x70	; 112
 398:	fc 4f       	sbci	r31, 0xFC	; 252
 39a:	20 83       	st	Z, r18
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	9a 01       	movw	r18, r20
 3a0:	23 50       	subi	r18, 0x03	; 3
 3a2:	31 09       	sbc	r19, r1
 3a4:	28 17       	cp	r18, r24
 3a6:	39 07       	cpc	r19, r25
 3a8:	8c f7       	brge	.-30     	; 0x38c <CheckRx+0x34>
 3aa:	92 b3       	in	r25, 0x12	; 18
 3ac:	88 e0       	ldi	r24, 0x08	; 8
 3ae:	89 27       	eor	r24, r25
 3b0:	82 bb       	out	0x12, r24	; 18
 3b2:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <RXSBWP+0x1>
 3b6:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <RXSBWP>
 3ba:	80 e8       	ldi	r24, 0x80	; 128
 3bc:	ec ef       	ldi	r30, 0xFC	; 252
 3be:	f0 e0       	ldi	r31, 0x00	; 0
 3c0:	df 01       	movw	r26, r30
 3c2:	1d 92       	st	X+, r1
 3c4:	8a 95       	dec	r24
 3c6:	e9 f7       	brne	.-6      	; 0x3c2 <CheckRx+0x6a>
 3c8:	08 95       	ret

000003ca <__vector_11>:
 3ca:	1f 92       	push	r1
 3cc:	0f 92       	push	r0
 3ce:	0f b6       	in	r0, 0x3f	; 63
 3d0:	0f 92       	push	r0
 3d2:	11 24       	eor	r1, r1
 3d4:	2f 93       	push	r18
 3d6:	3f 93       	push	r19
 3d8:	4f 93       	push	r20
 3da:	5f 93       	push	r21
 3dc:	6f 93       	push	r22
 3de:	7f 93       	push	r23
 3e0:	8f 93       	push	r24
 3e2:	9f 93       	push	r25
 3e4:	af 93       	push	r26
 3e6:	bf 93       	push	r27
 3e8:	ef 93       	push	r30
 3ea:	ff 93       	push	r31
 3ec:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <RXSBWP>
 3f0:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <RXSBWP+0x1>
 3f4:	01 96       	adiw	r24, 0x01	; 1
 3f6:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <RXSBWP+0x1>
 3fa:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <RXSBWP>
 3fe:	2c b1       	in	r18, 0x0c	; 12
 400:	fc 01       	movw	r30, r24
 402:	e4 50       	subi	r30, 0x04	; 4
 404:	ff 4f       	sbci	r31, 0xFF	; 255
 406:	20 83       	st	Z, r18
 408:	0e 94 ac 01 	call	0x358	; 0x358 <CheckRx>
 40c:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <RXSBWP>
 410:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <RXSBWP+0x1>
 414:	80 38       	cpi	r24, 0x80	; 128
 416:	91 05       	cpc	r25, r1
 418:	24 f0       	brlt	.+8      	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 41a:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <RXSBWP+0x1>
 41e:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <RXSBWP>
 422:	ff 91       	pop	r31
 424:	ef 91       	pop	r30
 426:	bf 91       	pop	r27
 428:	af 91       	pop	r26
 42a:	9f 91       	pop	r25
 42c:	8f 91       	pop	r24
 42e:	7f 91       	pop	r23
 430:	6f 91       	pop	r22
 432:	5f 91       	pop	r21
 434:	4f 91       	pop	r20
 436:	3f 91       	pop	r19
 438:	2f 91       	pop	r18
 43a:	0f 90       	pop	r0
 43c:	0f be       	out	0x3f, r0	; 63
 43e:	0f 90       	pop	r0
 440:	1f 90       	pop	r1
 442:	18 95       	reti

00000444 <SPI_MAST_Init>:
 444:	0f 93       	push	r16
 446:	e7 b3       	in	r30, 0x17	; 23
 448:	ef 7b       	andi	r30, 0xBF	; 191
 44a:	e7 bb       	out	0x17, r30	; 23
 44c:	e7 b3       	in	r30, 0x17	; 23
 44e:	e0 62       	ori	r30, 0x20	; 32
 450:	e7 bb       	out	0x17, r30	; 23
 452:	e7 b3       	in	r30, 0x17	; 23
 454:	e0 61       	ori	r30, 0x10	; 16
 456:	e7 bb       	out	0x17, r30	; 23
 458:	e7 b3       	in	r30, 0x17	; 23
 45a:	e0 68       	ori	r30, 0x80	; 128
 45c:	e7 bb       	out	0x17, r30	; 23
 45e:	0e b9       	out	0x0e, r16	; 14
 460:	1d b8       	out	0x0d, r1	; 13
 462:	ed b1       	in	r30, 0x0d	; 13
 464:	88 0f       	add	r24, r24
 466:	99 1f       	adc	r25, r25
 468:	82 95       	swap	r24
 46a:	92 95       	swap	r25
 46c:	90 7f       	andi	r25, 0xF0	; 240
 46e:	98 27       	eor	r25, r24
 470:	80 7f       	andi	r24, 0xF0	; 240
 472:	98 27       	eor	r25, r24
 474:	8e 2b       	or	r24, r30
 476:	8d b9       	out	0x0d, r24	; 13
 478:	8d b1       	in	r24, 0x0d	; 13
 47a:	44 0f       	add	r20, r20
 47c:	55 1f       	adc	r21, r21
 47e:	44 0f       	add	r20, r20
 480:	55 1f       	adc	r21, r21
 482:	44 0f       	add	r20, r20
 484:	55 1f       	adc	r21, r21
 486:	22 0f       	add	r18, r18
 488:	33 1f       	adc	r19, r19
 48a:	22 0f       	add	r18, r18
 48c:	33 1f       	adc	r19, r19
 48e:	40 6c       	ori	r20, 0xC0	; 192
 490:	24 2b       	or	r18, r20
 492:	28 2b       	or	r18, r24
 494:	20 61       	ori	r18, 0x10	; 16
 496:	2d b9       	out	0x0d, r18	; 13
 498:	60 31       	cpi	r22, 0x10	; 16
 49a:	71 05       	cpc	r23, r1
 49c:	99 f0       	breq	.+38     	; 0x4c4 <__stack+0x65>
 49e:	24 f4       	brge	.+8      	; 0x4a8 <__stack+0x49>
 4a0:	64 30       	cpi	r22, 0x04	; 4
 4a2:	71 05       	cpc	r23, r1
 4a4:	41 f0       	breq	.+16     	; 0x4b6 <__stack+0x57>
 4a6:	22 c0       	rjmp	.+68     	; 0x4ec <__stack+0x8d>
 4a8:	60 34       	cpi	r22, 0x40	; 64
 4aa:	71 05       	cpc	r23, r1
 4ac:	91 f0       	breq	.+36     	; 0x4d2 <__stack+0x73>
 4ae:	60 38       	cpi	r22, 0x80	; 128
 4b0:	71 05       	cpc	r23, r1
 4b2:	b1 f0       	breq	.+44     	; 0x4e0 <__stack+0x81>
 4b4:	1b c0       	rjmp	.+54     	; 0x4ec <__stack+0x8d>
 4b6:	8d b1       	in	r24, 0x0d	; 13
 4b8:	8d 7f       	andi	r24, 0xFD	; 253
 4ba:	8d b9       	out	0x0d, r24	; 13
 4bc:	8d b1       	in	r24, 0x0d	; 13
 4be:	8e 7f       	andi	r24, 0xFE	; 254
 4c0:	8d b9       	out	0x0d, r24	; 13
 4c2:	14 c0       	rjmp	.+40     	; 0x4ec <__stack+0x8d>
 4c4:	8d b1       	in	r24, 0x0d	; 13
 4c6:	8d 7f       	andi	r24, 0xFD	; 253
 4c8:	8d b9       	out	0x0d, r24	; 13
 4ca:	8d b1       	in	r24, 0x0d	; 13
 4cc:	81 60       	ori	r24, 0x01	; 1
 4ce:	8d b9       	out	0x0d, r24	; 13
 4d0:	0d c0       	rjmp	.+26     	; 0x4ec <__stack+0x8d>
 4d2:	8d b1       	in	r24, 0x0d	; 13
 4d4:	82 60       	ori	r24, 0x02	; 2
 4d6:	8d b9       	out	0x0d, r24	; 13
 4d8:	8d b1       	in	r24, 0x0d	; 13
 4da:	8e 7f       	andi	r24, 0xFE	; 254
 4dc:	8d b9       	out	0x0d, r24	; 13
 4de:	06 c0       	rjmp	.+12     	; 0x4ec <__stack+0x8d>
 4e0:	8d b1       	in	r24, 0x0d	; 13
 4e2:	82 60       	ori	r24, 0x02	; 2
 4e4:	8d b9       	out	0x0d, r24	; 13
 4e6:	8d b1       	in	r24, 0x0d	; 13
 4e8:	81 60       	ori	r24, 0x01	; 1
 4ea:	8d b9       	out	0x0d, r24	; 13
 4ec:	0f 91       	pop	r16
 4ee:	08 95       	ret

000004f0 <SPI_Write>:
 4f0:	e7 e8       	ldi	r30, 0x87	; 135
 4f2:	f3 e1       	ldi	r31, 0x13	; 19
 4f4:	31 97       	sbiw	r30, 0x01	; 1
 4f6:	f1 f7       	brne	.-4      	; 0x4f4 <SPI_Write+0x4>
 4f8:	00 c0       	rjmp	.+0      	; 0x4fa <SPI_Write+0xa>
 4fa:	00 00       	nop
 4fc:	8f b9       	out	0x0f, r24	; 15
 4fe:	77 9b       	sbis	0x0e, 7	; 14
 500:	fe cf       	rjmp	.-4      	; 0x4fe <SPI_Write+0xe>
 502:	8f b1       	in	r24, 0x0f	; 15
 504:	08 95       	ret

00000506 <SPI_transfer>:
 506:	8f b9       	out	0x0f, r24	; 15
 508:	77 9b       	sbis	0x0e, 7	; 14
 50a:	fe cf       	rjmp	.-4      	; 0x508 <SPI_transfer+0x2>
 50c:	8f b1       	in	r24, 0x0f	; 15
 50e:	08 95       	ret

00000510 <SD_Command>:
 510:	ff 92       	push	r15
 512:	0f 93       	push	r16
 514:	1f 93       	push	r17
 516:	cf 93       	push	r28
 518:	df 93       	push	r29
 51a:	d4 2f       	mov	r29, r20
 51c:	15 2f       	mov	r17, r21
 51e:	06 2f       	mov	r16, r22
 520:	f7 2e       	mov	r15, r23
 522:	c2 2f       	mov	r28, r18
 524:	80 64       	ori	r24, 0x40	; 64
 526:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SPI_Write>
 52a:	8f 2d       	mov	r24, r15
 52c:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SPI_Write>
 530:	80 2f       	mov	r24, r16
 532:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SPI_Write>
 536:	81 2f       	mov	r24, r17
 538:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SPI_Write>
 53c:	8d 2f       	mov	r24, r29
 53e:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SPI_Write>
 542:	8c 2f       	mov	r24, r28
 544:	81 60       	ori	r24, 0x01	; 1
 546:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SPI_Write>
 54a:	df 91       	pop	r29
 54c:	cf 91       	pop	r28
 54e:	1f 91       	pop	r17
 550:	0f 91       	pop	r16
 552:	ff 90       	pop	r15
 554:	08 95       	ret

00000556 <SD_powerUpSeq>:
 556:	cf 93       	push	r28
 558:	8b b3       	in	r24, 0x1b	; 27
 55a:	81 60       	ori	r24, 0x01	; 1
 55c:	8b bb       	out	0x1b, r24	; 27
 55e:	87 e8       	ldi	r24, 0x87	; 135
 560:	93 e1       	ldi	r25, 0x13	; 19
 562:	01 97       	sbiw	r24, 0x01	; 1
 564:	f1 f7       	brne	.-4      	; 0x562 <SD_powerUpSeq+0xc>
 566:	00 c0       	rjmp	.+0      	; 0x568 <SD_powerUpSeq+0x12>
 568:	00 00       	nop
 56a:	c0 e0       	ldi	r28, 0x00	; 0
 56c:	07 c0       	rjmp	.+14     	; 0x57c <SD_powerUpSeq+0x26>
 56e:	8b b3       	in	r24, 0x1b	; 27
 570:	8e 7f       	andi	r24, 0xFE	; 254
 572:	8b bb       	out	0x1b, r24	; 27
 574:	8f ef       	ldi	r24, 0xFF	; 255
 576:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SPI_Write>
 57a:	cf 5f       	subi	r28, 0xFF	; 255
 57c:	c0 35       	cpi	r28, 0x50	; 80
 57e:	b8 f3       	brcs	.-18     	; 0x56e <SD_powerUpSeq+0x18>
 580:	8b b3       	in	r24, 0x1b	; 27
 582:	81 60       	ori	r24, 0x01	; 1
 584:	8b bb       	out	0x1b, r24	; 27
 586:	8f ef       	ldi	r24, 0xFF	; 255
 588:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SPI_Write>
 58c:	cf 91       	pop	r28
 58e:	08 95       	ret

00000590 <SD_Reset>:
 590:	1a ba       	out	0x1a, r1	; 26
 592:	1b ba       	out	0x1b, r1	; 27
 594:	2f e7       	ldi	r18, 0x7F	; 127
 596:	8a e1       	ldi	r24, 0x1A	; 26
 598:	96 e0       	ldi	r25, 0x06	; 6
 59a:	21 50       	subi	r18, 0x01	; 1
 59c:	80 40       	sbci	r24, 0x00	; 0
 59e:	90 40       	sbci	r25, 0x00	; 0
 5a0:	e1 f7       	brne	.-8      	; 0x59a <SD_Reset+0xa>
 5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <SD_Reset+0x14>
 5a4:	00 00       	nop
 5a6:	82 e0       	ldi	r24, 0x02	; 2
 5a8:	8a bb       	out	0x1a, r24	; 26
 5aa:	8b bb       	out	0x1b, r24	; 27
 5ac:	08 95       	ret

000005ae <SD_readRes1>:
 5ae:	cf 93       	push	r28
 5b0:	c0 e0       	ldi	r28, 0x00	; 0
 5b2:	03 c0       	rjmp	.+6      	; 0x5ba <SD_readRes1+0xc>
 5b4:	cf 5f       	subi	r28, 0xFF	; 255
 5b6:	c9 30       	cpi	r28, 0x09	; 9
 5b8:	30 f4       	brcc	.+12     	; 0x5c6 <SD_readRes1+0x18>
 5ba:	8f ef       	ldi	r24, 0xFF	; 255
 5bc:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 5c0:	8f 3f       	cpi	r24, 0xFF	; 255
 5c2:	c1 f3       	breq	.-16     	; 0x5b4 <SD_readRes1+0x6>
 5c4:	01 c0       	rjmp	.+2      	; 0x5c8 <SD_readRes1+0x1a>
 5c6:	80 e8       	ldi	r24, 0x80	; 128
 5c8:	cf 91       	pop	r28
 5ca:	08 95       	ret

000005cc <SD_goIdleState>:
 5cc:	cf 93       	push	r28
 5ce:	8f ef       	ldi	r24, 0xFF	; 255
 5d0:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 5d4:	8b b3       	in	r24, 0x1b	; 27
 5d6:	8e 7f       	andi	r24, 0xFE	; 254
 5d8:	8b bb       	out	0x1b, r24	; 27
 5da:	8f ef       	ldi	r24, 0xFF	; 255
 5dc:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 5e0:	24 e9       	ldi	r18, 0x94	; 148
 5e2:	40 e0       	ldi	r20, 0x00	; 0
 5e4:	50 e0       	ldi	r21, 0x00	; 0
 5e6:	ba 01       	movw	r22, r20
 5e8:	80 e0       	ldi	r24, 0x00	; 0
 5ea:	0e 94 88 02 	call	0x510	; 0x510 <SD_Command>
 5ee:	0e 94 d7 02 	call	0x5ae	; 0x5ae <SD_readRes1>
 5f2:	c8 2f       	mov	r28, r24
 5f4:	8f ef       	ldi	r24, 0xFF	; 255
 5f6:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 5fa:	8b b3       	in	r24, 0x1b	; 27
 5fc:	81 60       	ori	r24, 0x01	; 1
 5fe:	8b bb       	out	0x1b, r24	; 27
 600:	8f ef       	ldi	r24, 0xFF	; 255
 602:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 606:	8c 2f       	mov	r24, r28
 608:	cf 91       	pop	r28
 60a:	08 95       	ret

0000060c <SD_readRes7>:
 60c:	cf 93       	push	r28
 60e:	df 93       	push	r29
 610:	ec 01       	movw	r28, r24
 612:	0e 94 d7 02 	call	0x5ae	; 0x5ae <SD_readRes1>
 616:	88 83       	st	Y, r24
 618:	82 30       	cpi	r24, 0x02	; 2
 61a:	80 f4       	brcc	.+32     	; 0x63c <SD_readRes7+0x30>
 61c:	8f ef       	ldi	r24, 0xFF	; 255
 61e:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 622:	89 83       	std	Y+1, r24	; 0x01
 624:	8f ef       	ldi	r24, 0xFF	; 255
 626:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 62a:	8a 83       	std	Y+2, r24	; 0x02
 62c:	8f ef       	ldi	r24, 0xFF	; 255
 62e:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 632:	8b 83       	std	Y+3, r24	; 0x03
 634:	8f ef       	ldi	r24, 0xFF	; 255
 636:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 63a:	8c 83       	std	Y+4, r24	; 0x04
 63c:	df 91       	pop	r29
 63e:	cf 91       	pop	r28
 640:	08 95       	ret

00000642 <SD_sendIfCond>:
 642:	cf 93       	push	r28
 644:	df 93       	push	r29
 646:	ec 01       	movw	r28, r24
 648:	8f ef       	ldi	r24, 0xFF	; 255
 64a:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 64e:	8b b3       	in	r24, 0x1b	; 27
 650:	8e 7f       	andi	r24, 0xFE	; 254
 652:	8b bb       	out	0x1b, r24	; 27
 654:	8f ef       	ldi	r24, 0xFF	; 255
 656:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 65a:	26 e8       	ldi	r18, 0x86	; 134
 65c:	4a ea       	ldi	r20, 0xAA	; 170
 65e:	51 e0       	ldi	r21, 0x01	; 1
 660:	60 e0       	ldi	r22, 0x00	; 0
 662:	70 e0       	ldi	r23, 0x00	; 0
 664:	88 e0       	ldi	r24, 0x08	; 8
 666:	0e 94 88 02 	call	0x510	; 0x510 <SD_Command>
 66a:	ce 01       	movw	r24, r28
 66c:	0e 94 06 03 	call	0x60c	; 0x60c <SD_readRes7>
 670:	8f ef       	ldi	r24, 0xFF	; 255
 672:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 676:	8b b3       	in	r24, 0x1b	; 27
 678:	81 60       	ori	r24, 0x01	; 1
 67a:	8b bb       	out	0x1b, r24	; 27
 67c:	8f ef       	ldi	r24, 0xFF	; 255
 67e:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 682:	df 91       	pop	r29
 684:	cf 91       	pop	r28
 686:	08 95       	ret

00000688 <SD_readOCR>:
 688:	cf 93       	push	r28
 68a:	df 93       	push	r29
 68c:	ec 01       	movw	r28, r24
 68e:	8f ef       	ldi	r24, 0xFF	; 255
 690:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 694:	8b b3       	in	r24, 0x1b	; 27
 696:	8e 7f       	andi	r24, 0xFE	; 254
 698:	8b bb       	out	0x1b, r24	; 27
 69a:	8f ef       	ldi	r24, 0xFF	; 255
 69c:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 6a0:	20 e0       	ldi	r18, 0x00	; 0
 6a2:	40 e0       	ldi	r20, 0x00	; 0
 6a4:	50 e0       	ldi	r21, 0x00	; 0
 6a6:	ba 01       	movw	r22, r20
 6a8:	8a e3       	ldi	r24, 0x3A	; 58
 6aa:	0e 94 88 02 	call	0x510	; 0x510 <SD_Command>
 6ae:	ce 01       	movw	r24, r28
 6b0:	0e 94 06 03 	call	0x60c	; 0x60c <SD_readRes7>
 6b4:	8f ef       	ldi	r24, 0xFF	; 255
 6b6:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 6ba:	8b b3       	in	r24, 0x1b	; 27
 6bc:	81 60       	ori	r24, 0x01	; 1
 6be:	8b bb       	out	0x1b, r24	; 27
 6c0:	8f ef       	ldi	r24, 0xFF	; 255
 6c2:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 6c6:	df 91       	pop	r29
 6c8:	cf 91       	pop	r28
 6ca:	08 95       	ret

000006cc <SD_sendApp>:
 6cc:	cf 93       	push	r28
 6ce:	8f ef       	ldi	r24, 0xFF	; 255
 6d0:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 6d4:	8b b3       	in	r24, 0x1b	; 27
 6d6:	8e 7f       	andi	r24, 0xFE	; 254
 6d8:	8b bb       	out	0x1b, r24	; 27
 6da:	8f ef       	ldi	r24, 0xFF	; 255
 6dc:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 6e0:	20 e0       	ldi	r18, 0x00	; 0
 6e2:	40 e0       	ldi	r20, 0x00	; 0
 6e4:	50 e0       	ldi	r21, 0x00	; 0
 6e6:	ba 01       	movw	r22, r20
 6e8:	87 e3       	ldi	r24, 0x37	; 55
 6ea:	0e 94 88 02 	call	0x510	; 0x510 <SD_Command>
 6ee:	0e 94 d7 02 	call	0x5ae	; 0x5ae <SD_readRes1>
 6f2:	c8 2f       	mov	r28, r24
 6f4:	8f ef       	ldi	r24, 0xFF	; 255
 6f6:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 6fa:	8b b3       	in	r24, 0x1b	; 27
 6fc:	81 60       	ori	r24, 0x01	; 1
 6fe:	8b bb       	out	0x1b, r24	; 27
 700:	8f ef       	ldi	r24, 0xFF	; 255
 702:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 706:	8c 2f       	mov	r24, r28
 708:	cf 91       	pop	r28
 70a:	08 95       	ret

0000070c <SD_sendOpCond>:
 70c:	cf 93       	push	r28
 70e:	8f ef       	ldi	r24, 0xFF	; 255
 710:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 714:	8b b3       	in	r24, 0x1b	; 27
 716:	8e 7f       	andi	r24, 0xFE	; 254
 718:	8b bb       	out	0x1b, r24	; 27
 71a:	8f ef       	ldi	r24, 0xFF	; 255
 71c:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 720:	20 e0       	ldi	r18, 0x00	; 0
 722:	40 e0       	ldi	r20, 0x00	; 0
 724:	50 e0       	ldi	r21, 0x00	; 0
 726:	60 e0       	ldi	r22, 0x00	; 0
 728:	70 e4       	ldi	r23, 0x40	; 64
 72a:	89 e2       	ldi	r24, 0x29	; 41
 72c:	0e 94 88 02 	call	0x510	; 0x510 <SD_Command>
 730:	0e 94 d7 02 	call	0x5ae	; 0x5ae <SD_readRes1>
 734:	c8 2f       	mov	r28, r24
 736:	8f ef       	ldi	r24, 0xFF	; 255
 738:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 73c:	8b b3       	in	r24, 0x1b	; 27
 73e:	81 60       	ori	r24, 0x01	; 1
 740:	8b bb       	out	0x1b, r24	; 27
 742:	8f ef       	ldi	r24, 0xFF	; 255
 744:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 748:	8c 2f       	mov	r24, r28
 74a:	cf 91       	pop	r28
 74c:	08 95       	ret

0000074e <SD_Init>:
 74e:	0f 93       	push	r16
 750:	1f 93       	push	r17
 752:	cf 93       	push	r28
 754:	df 93       	push	r29
 756:	00 d0       	rcall	.+0      	; 0x758 <SD_Init+0xa>
 758:	00 d0       	rcall	.+0      	; 0x75a <SD_Init+0xc>
 75a:	1f 92       	push	r1
 75c:	cd b7       	in	r28, 0x3d	; 61
 75e:	de b7       	in	r29, 0x3e	; 62
 760:	0e 94 ab 02 	call	0x556	; 0x556 <SD_powerUpSeq>
 764:	00 e0       	ldi	r16, 0x00	; 0
 766:	03 c0       	rjmp	.+6      	; 0x76e <SD_Init+0x20>
 768:	0f 5f       	subi	r16, 0xFF	; 255
 76a:	0b 30       	cpi	r16, 0x0B	; 11
 76c:	70 f5       	brcc	.+92     	; 0x7ca <SD_Init+0x7c>
 76e:	0e 94 e6 02 	call	0x5cc	; 0x5cc <SD_goIdleState>
 772:	18 2f       	mov	r17, r24
 774:	89 83       	std	Y+1, r24	; 0x01
 776:	81 30       	cpi	r24, 0x01	; 1
 778:	b9 f7       	brne	.-18     	; 0x768 <SD_Init+0x1a>
 77a:	ce 01       	movw	r24, r28
 77c:	01 96       	adiw	r24, 0x01	; 1
 77e:	0e 94 21 03 	call	0x642	; 0x642 <SD_sendIfCond>
 782:	89 81       	ldd	r24, Y+1	; 0x01
 784:	81 30       	cpi	r24, 0x01	; 1
 786:	41 f5       	brne	.+80     	; 0x7d8 <SD_Init+0x8a>
 788:	8d 81       	ldd	r24, Y+5	; 0x05
 78a:	8a 3a       	cpi	r24, 0xAA	; 170
 78c:	01 f5       	brne	.+64     	; 0x7ce <SD_Init+0x80>
 78e:	10 e0       	ldi	r17, 0x00	; 0
 790:	15 36       	cpi	r17, 0x65	; 101
 792:	f8 f4       	brcc	.+62     	; 0x7d2 <SD_Init+0x84>
 794:	0e 94 66 03 	call	0x6cc	; 0x6cc <SD_sendApp>
 798:	89 83       	std	Y+1, r24	; 0x01
 79a:	82 30       	cpi	r24, 0x02	; 2
 79c:	18 f4       	brcc	.+6      	; 0x7a4 <SD_Init+0x56>
 79e:	0e 94 86 03 	call	0x70c	; 0x70c <SD_sendOpCond>
 7a2:	89 83       	std	Y+1, r24	; 0x01
 7a4:	8f e4       	ldi	r24, 0x4F	; 79
 7a6:	93 ec       	ldi	r25, 0xC3	; 195
 7a8:	01 97       	sbiw	r24, 0x01	; 1
 7aa:	f1 f7       	brne	.-4      	; 0x7a8 <SD_Init+0x5a>
 7ac:	00 c0       	rjmp	.+0      	; 0x7ae <SD_Init+0x60>
 7ae:	00 00       	nop
 7b0:	1f 5f       	subi	r17, 0xFF	; 255
 7b2:	89 81       	ldd	r24, Y+1	; 0x01
 7b4:	81 11       	cpse	r24, r1
 7b6:	ec cf       	rjmp	.-40     	; 0x790 <SD_Init+0x42>
 7b8:	ce 01       	movw	r24, r28
 7ba:	01 96       	adiw	r24, 0x01	; 1
 7bc:	0e 94 44 03 	call	0x688	; 0x688 <SD_readOCR>
 7c0:	8a 81       	ldd	r24, Y+2	; 0x02
 7c2:	88 23       	and	r24, r24
 7c4:	44 f0       	brlt	.+16     	; 0x7d6 <SD_Init+0x88>
 7c6:	14 e0       	ldi	r17, 0x04	; 4
 7c8:	07 c0       	rjmp	.+14     	; 0x7d8 <SD_Init+0x8a>
 7ca:	10 e0       	ldi	r17, 0x00	; 0
 7cc:	05 c0       	rjmp	.+10     	; 0x7d8 <SD_Init+0x8a>
 7ce:	12 e0       	ldi	r17, 0x02	; 2
 7d0:	03 c0       	rjmp	.+6      	; 0x7d8 <SD_Init+0x8a>
 7d2:	13 e0       	ldi	r17, 0x03	; 3
 7d4:	01 c0       	rjmp	.+2      	; 0x7d8 <SD_Init+0x8a>
 7d6:	15 e0       	ldi	r17, 0x05	; 5
 7d8:	81 2f       	mov	r24, r17
 7da:	0f 90       	pop	r0
 7dc:	0f 90       	pop	r0
 7de:	0f 90       	pop	r0
 7e0:	0f 90       	pop	r0
 7e2:	0f 90       	pop	r0
 7e4:	df 91       	pop	r29
 7e6:	cf 91       	pop	r28
 7e8:	1f 91       	pop	r17
 7ea:	0f 91       	pop	r16
 7ec:	08 95       	ret

000007ee <SD_RSB>:
 7ee:	4f 92       	push	r4
 7f0:	5f 92       	push	r5
 7f2:	6f 92       	push	r6
 7f4:	7f 92       	push	r7
 7f6:	af 92       	push	r10
 7f8:	bf 92       	push	r11
 7fa:	cf 92       	push	r12
 7fc:	df 92       	push	r13
 7fe:	ff 92       	push	r15
 800:	0f 93       	push	r16
 802:	1f 93       	push	r17
 804:	cf 93       	push	r28
 806:	df 93       	push	r29
 808:	6c 01       	movw	r12, r24
 80a:	2a 01       	movw	r4, r20
 80c:	3b 01       	movw	r6, r22
 80e:	59 01       	movw	r10, r18
 810:	8f ef       	ldi	r24, 0xFF	; 255
 812:	f9 01       	movw	r30, r18
 814:	80 83       	st	Z, r24
 816:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 81a:	8b b3       	in	r24, 0x1b	; 27
 81c:	8e 7f       	andi	r24, 0xFE	; 254
 81e:	8b bb       	out	0x1b, r24	; 27
 820:	8f ef       	ldi	r24, 0xFF	; 255
 822:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 826:	20 e0       	ldi	r18, 0x00	; 0
 828:	b3 01       	movw	r22, r6
 82a:	a2 01       	movw	r20, r4
 82c:	81 e1       	ldi	r24, 0x11	; 17
 82e:	0e 94 88 02 	call	0x510	; 0x510 <SD_Command>
 832:	0e 94 d7 02 	call	0x5ae	; 0x5ae <SD_readRes1>
 836:	8f 3f       	cpi	r24, 0xFF	; 255
 838:	49 f4       	brne	.+18     	; 0x84c <SD_RSB+0x5e>
 83a:	2b c0       	rjmp	.+86     	; 0x892 <SD_RSB+0xa4>
 83c:	8f ef       	ldi	r24, 0xFF	; 255
 83e:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 842:	f8 2e       	mov	r15, r24
 844:	fe ef       	ldi	r31, 0xFE	; 254
 846:	8f 13       	cpse	r24, r31
 848:	03 c0       	rjmp	.+6      	; 0x850 <SD_RSB+0x62>
 84a:	07 c0       	rjmp	.+14     	; 0x85a <SD_RSB+0x6c>
 84c:	c0 e0       	ldi	r28, 0x00	; 0
 84e:	d0 e0       	ldi	r29, 0x00	; 0
 850:	21 96       	adiw	r28, 0x01	; 1
 852:	c4 32       	cpi	r28, 0x24	; 36
 854:	84 ef       	ldi	r24, 0xF4	; 244
 856:	d8 07       	cpc	r29, r24
 858:	89 f7       	brne	.-30     	; 0x83c <SD_RSB+0x4e>
 85a:	ee ef       	ldi	r30, 0xFE	; 254
 85c:	fe 12       	cpse	r15, r30
 85e:	17 c0       	rjmp	.+46     	; 0x88e <SD_RSB+0xa0>
 860:	0a c0       	rjmp	.+20     	; 0x876 <SD_RSB+0x88>
 862:	86 01       	movw	r16, r12
 864:	0c 0f       	add	r16, r28
 866:	1d 1f       	adc	r17, r29
 868:	8f ef       	ldi	r24, 0xFF	; 255
 86a:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 86e:	f8 01       	movw	r30, r16
 870:	80 83       	st	Z, r24
 872:	21 96       	adiw	r28, 0x01	; 1
 874:	02 c0       	rjmp	.+4      	; 0x87a <SD_RSB+0x8c>
 876:	c0 e0       	ldi	r28, 0x00	; 0
 878:	d0 e0       	ldi	r29, 0x00	; 0
 87a:	c1 15       	cp	r28, r1
 87c:	f2 e0       	ldi	r31, 0x02	; 2
 87e:	df 07       	cpc	r29, r31
 880:	80 f3       	brcs	.-32     	; 0x862 <SD_RSB+0x74>
 882:	8f ef       	ldi	r24, 0xFF	; 255
 884:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 888:	8f ef       	ldi	r24, 0xFF	; 255
 88a:	0e 94 83 02 	call	0x506	; 0x506 <SPI_transfer>
 88e:	f5 01       	movw	r30, r10
 890:	f0 82       	st	Z, r15
 892:	df 91       	pop	r29
 894:	cf 91       	pop	r28
 896:	1f 91       	pop	r17
 898:	0f 91       	pop	r16
 89a:	ff 90       	pop	r15
 89c:	df 90       	pop	r13
 89e:	cf 90       	pop	r12
 8a0:	bf 90       	pop	r11
 8a2:	af 90       	pop	r10
 8a4:	7f 90       	pop	r7
 8a6:	6f 90       	pop	r6
 8a8:	5f 90       	pop	r5
 8aa:	4f 90       	pop	r4
 8ac:	08 95       	ret

000008ae <FAT32_Init>:
 8ae:	2b e1       	ldi	r18, 0x1B	; 27
 8b0:	34 e0       	ldi	r19, 0x04	; 4
 8b2:	40 e0       	ldi	r20, 0x00	; 0
 8b4:	50 e0       	ldi	r21, 0x00	; 0
 8b6:	ba 01       	movw	r22, r20
 8b8:	82 e9       	ldi	r24, 0x92	; 146
 8ba:	91 e0       	ldi	r25, 0x01	; 1
 8bc:	0e 94 f7 03 	call	0x7ee	; 0x7ee <SD_RSB>
 8c0:	80 91 90 03 	lds	r24, 0x0390	; 0x800390 <StatusBuff+0x1fe>
 8c4:	85 35       	cpi	r24, 0x55	; 85
 8c6:	09 f0       	breq	.+2      	; 0x8ca <FAT32_Init+0x1c>
 8c8:	46 c0       	rjmp	.+140    	; 0x956 <FAT32_Init+0xa8>
 8ca:	80 91 91 03 	lds	r24, 0x0391	; 0x800391 <RXSB>
 8ce:	8a 3a       	cpi	r24, 0xAA	; 170
 8d0:	09 f0       	breq	.+2      	; 0x8d4 <FAT32_Init+0x26>
 8d2:	43 c0       	rjmp	.+134    	; 0x95a <FAT32_Init+0xac>
 8d4:	85 e6       	ldi	r24, 0x65	; 101
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>
 8dc:	e2 e9       	ldi	r30, 0x92	; 146
 8de:	f1 e0       	ldi	r31, 0x01	; 1
 8e0:	27 85       	ldd	r18, Z+15	; 0x0f
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	32 2f       	mov	r19, r18
 8e6:	22 27       	eor	r18, r18
 8e8:	86 85       	ldd	r24, Z+14	; 0x0e
 8ea:	28 0f       	add	r18, r24
 8ec:	31 1d       	adc	r19, r1
 8ee:	30 93 1a 04 	sts	0x041A, r19	; 0x80041a <FATStartSec+0x1>
 8f2:	20 93 19 04 	sts	0x0419, r18	; 0x800419 <FATStartSec>
 8f6:	86 a1       	ldd	r24, Z+38	; 0x26
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	a0 e0       	ldi	r26, 0x00	; 0
 8fc:	b0 e0       	ldi	r27, 0x00	; 0
 8fe:	dc 01       	movw	r26, r24
 900:	99 27       	eor	r25, r25
 902:	88 27       	eor	r24, r24
 904:	45 a1       	ldd	r20, Z+37	; 0x25
 906:	50 e0       	ldi	r21, 0x00	; 0
 908:	54 2f       	mov	r21, r20
 90a:	44 27       	eor	r20, r20
 90c:	84 0f       	add	r24, r20
 90e:	95 1f       	adc	r25, r21
 910:	a1 1d       	adc	r26, r1
 912:	b1 1d       	adc	r27, r1
 914:	44 a1       	ldd	r20, Z+36	; 0x24
 916:	84 0f       	add	r24, r20
 918:	91 1d       	adc	r25, r1
 91a:	a1 1d       	adc	r26, r1
 91c:	b1 1d       	adc	r27, r1
 91e:	60 89       	ldd	r22, Z+16	; 0x10
 920:	70 e0       	ldi	r23, 0x00	; 0
 922:	68 9f       	mul	r22, r24
 924:	a0 01       	movw	r20, r0
 926:	69 9f       	mul	r22, r25
 928:	50 0d       	add	r21, r0
 92a:	78 9f       	mul	r23, r24
 92c:	50 0d       	add	r21, r0
 92e:	11 24       	eor	r1, r1
 930:	50 93 fb 00 	sts	0x00FB, r21	; 0x8000fb <FatSecs+0x1>
 934:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <FatSecs>
 938:	c9 01       	movw	r24, r18
 93a:	84 0f       	add	r24, r20
 93c:	95 1f       	adc	r25, r21
 93e:	a0 e0       	ldi	r26, 0x00	; 0
 940:	b0 e0       	ldi	r27, 0x00	; 0
 942:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <RootDirSec>
 946:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <RootDirSec+0x1>
 94a:	a0 93 13 04 	sts	0x0413, r26	; 0x800413 <RootDirSec+0x2>
 94e:	b0 93 14 04 	sts	0x0414, r27	; 0x800414 <RootDirSec+0x3>
 952:	81 e0       	ldi	r24, 0x01	; 1
 954:	08 95       	ret
 956:	80 e0       	ldi	r24, 0x00	; 0
 958:	08 95       	ret
 95a:	80 e0       	ldi	r24, 0x00	; 0
 95c:	08 95       	ret

0000095e <FAT32_Open_File>:
 95e:	cf 92       	push	r12
 960:	df 92       	push	r13
 962:	ef 92       	push	r14
 964:	ff 92       	push	r15
 966:	0f 93       	push	r16
 968:	1f 93       	push	r17
 96a:	cf 93       	push	r28
 96c:	df 93       	push	r29
 96e:	ec 01       	movw	r28, r24
 970:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <RootDirSec>
 974:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <RootDirSec+0x1>
 978:	a0 91 13 04 	lds	r26, 0x0413	; 0x800413 <RootDirSec+0x2>
 97c:	b0 91 14 04 	lds	r27, 0x0414	; 0x800414 <RootDirSec+0x3>
 980:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <RDS>
 984:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <RDS+0x1>
 988:	a0 93 17 04 	sts	0x0417, r26	; 0x800417 <RDS+0x2>
 98c:	b0 93 18 04 	sts	0x0418, r27	; 0x800418 <RDS+0x3>
 990:	e1 2c       	mov	r14, r1
 992:	f1 2c       	mov	r15, r1
 994:	01 e0       	ldi	r16, 0x01	; 1
 996:	10 e0       	ldi	r17, 0x00	; 0
 998:	c1 2c       	mov	r12, r1
 99a:	d1 2c       	mov	r13, r1
 99c:	5e c0       	rjmp	.+188    	; 0xa5a <FAT32_Open_File+0xfc>
 99e:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <RootDirSec>
 9a2:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <RootDirSec+0x1>
 9a6:	a0 91 13 04 	lds	r26, 0x0413	; 0x800413 <RootDirSec+0x2>
 9aa:	b0 91 14 04 	lds	r27, 0x0414	; 0x800414 <RootDirSec+0x3>
 9ae:	a7 01       	movw	r20, r14
 9b0:	0f 2c       	mov	r0, r15
 9b2:	00 0c       	add	r0, r0
 9b4:	66 0b       	sbc	r22, r22
 9b6:	77 0b       	sbc	r23, r23
 9b8:	48 0f       	add	r20, r24
 9ba:	59 1f       	adc	r21, r25
 9bc:	6a 1f       	adc	r22, r26
 9be:	7b 1f       	adc	r23, r27
 9c0:	2b e1       	ldi	r18, 0x1B	; 27
 9c2:	34 e0       	ldi	r19, 0x04	; 4
 9c4:	82 e9       	ldi	r24, 0x92	; 146
 9c6:	91 e0       	ldi	r25, 0x01	; 1
 9c8:	0e 94 f7 03 	call	0x7ee	; 0x7ee <SD_RSB>
 9cc:	20 e0       	ldi	r18, 0x00	; 0
 9ce:	30 e0       	ldi	r19, 0x00	; 0
 9d0:	3a c0       	rjmp	.+116    	; 0xa46 <FAT32_Open_File+0xe8>
 9d2:	f9 01       	movw	r30, r18
 9d4:	ee 56       	subi	r30, 0x6E	; 110
 9d6:	fe 4f       	sbci	r31, 0xFE	; 254
 9d8:	90 81       	ld	r25, Z
 9da:	88 81       	ld	r24, Y
 9dc:	98 13       	cpse	r25, r24
 9de:	2e c0       	rjmp	.+92     	; 0xa3c <FAT32_Open_File+0xde>
 9e0:	10 c0       	rjmp	.+32     	; 0xa02 <FAT32_Open_File+0xa4>
 9e2:	f9 01       	movw	r30, r18
 9e4:	e8 0f       	add	r30, r24
 9e6:	f9 1f       	adc	r31, r25
 9e8:	ee 56       	subi	r30, 0x6E	; 110
 9ea:	fe 4f       	sbci	r31, 0xFE	; 254
 9ec:	50 81       	ld	r21, Z
 9ee:	fe 01       	movw	r30, r28
 9f0:	e8 0f       	add	r30, r24
 9f2:	f9 1f       	adc	r31, r25
 9f4:	40 81       	ld	r20, Z
 9f6:	54 17       	cp	r21, r20
 9f8:	11 f0       	breq	.+4      	; 0x9fe <FAT32_Open_File+0xa0>
 9fa:	00 e0       	ldi	r16, 0x00	; 0
 9fc:	10 e0       	ldi	r17, 0x00	; 0
 9fe:	01 96       	adiw	r24, 0x01	; 1
 a00:	04 c0       	rjmp	.+8      	; 0xa0a <FAT32_Open_File+0xac>
 a02:	80 e0       	ldi	r24, 0x00	; 0
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	01 e0       	ldi	r16, 0x01	; 1
 a08:	10 e0       	ldi	r17, 0x00	; 0
 a0a:	fe 01       	movw	r30, r28
 a0c:	01 90       	ld	r0, Z+
 a0e:	00 20       	and	r0, r0
 a10:	e9 f7       	brne	.-6      	; 0xa0c <FAT32_Open_File+0xae>
 a12:	31 97       	sbiw	r30, 0x01	; 1
 a14:	ec 1b       	sub	r30, r28
 a16:	fd 0b       	sbc	r31, r29
 a18:	8e 17       	cp	r24, r30
 a1a:	9f 07       	cpc	r25, r31
 a1c:	10 f3       	brcs	.-60     	; 0x9e2 <FAT32_Open_File+0x84>
 a1e:	01 15       	cp	r16, r1
 a20:	11 05       	cpc	r17, r1
 a22:	49 f0       	breq	.+18     	; 0xa36 <FAT32_Open_File+0xd8>
 a24:	d2 2e       	mov	r13, r18
 a26:	ce 2c       	mov	r12, r14
 a28:	8e e6       	ldi	r24, 0x6E	; 110
 a2a:	90 e0       	ldi	r25, 0x00	; 0
 a2c:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>
 a30:	02 e0       	ldi	r16, 0x02	; 2
 a32:	10 e0       	ldi	r17, 0x00	; 0
 a34:	0c c0       	rjmp	.+24     	; 0xa4e <FAT32_Open_File+0xf0>
 a36:	02 30       	cpi	r16, 0x02	; 2
 a38:	11 05       	cpc	r17, r1
 a3a:	49 f0       	breq	.+18     	; 0xa4e <FAT32_Open_File+0xf0>
 a3c:	02 30       	cpi	r16, 0x02	; 2
 a3e:	11 05       	cpc	r17, r1
 a40:	31 f0       	breq	.+12     	; 0xa4e <FAT32_Open_File+0xf0>
 a42:	2f 5f       	subi	r18, 0xFF	; 255
 a44:	3f 4f       	sbci	r19, 0xFF	; 255
 a46:	21 15       	cp	r18, r1
 a48:	82 e0       	ldi	r24, 0x02	; 2
 a4a:	38 07       	cpc	r19, r24
 a4c:	14 f2       	brlt	.-124    	; 0x9d2 <FAT32_Open_File+0x74>
 a4e:	02 30       	cpi	r16, 0x02	; 2
 a50:	11 05       	cpc	r17, r1
 a52:	41 f0       	breq	.+16     	; 0xa64 <FAT32_Open_File+0x106>
 a54:	8f ef       	ldi	r24, 0xFF	; 255
 a56:	e8 1a       	sub	r14, r24
 a58:	f8 0a       	sbc	r15, r24
 a5a:	8f ef       	ldi	r24, 0xFF	; 255
 a5c:	e8 16       	cp	r14, r24
 a5e:	f8 06       	cpc	r15, r24
 a60:	09 f0       	breq	.+2      	; 0xa64 <FAT32_Open_File+0x106>
 a62:	9d cf       	rjmp	.-198    	; 0x99e <FAT32_Open_File+0x40>
 a64:	01 2b       	or	r16, r17
 a66:	09 f4       	brne	.+2      	; 0xa6a <FAT32_Open_File+0x10c>
 a68:	4f c0       	rjmp	.+158    	; 0xb08 <FAT32_Open_File+0x1aa>
 a6a:	40 91 11 04 	lds	r20, 0x0411	; 0x800411 <RootDirSec>
 a6e:	50 91 12 04 	lds	r21, 0x0412	; 0x800412 <RootDirSec+0x1>
 a72:	60 91 13 04 	lds	r22, 0x0413	; 0x800413 <RootDirSec+0x2>
 a76:	70 91 14 04 	lds	r23, 0x0414	; 0x800414 <RootDirSec+0x3>
 a7a:	4c 0d       	add	r20, r12
 a7c:	51 1d       	adc	r21, r1
 a7e:	61 1d       	adc	r22, r1
 a80:	71 1d       	adc	r23, r1
 a82:	2b e1       	ldi	r18, 0x1B	; 27
 a84:	34 e0       	ldi	r19, 0x04	; 4
 a86:	82 e9       	ldi	r24, 0x92	; 146
 a88:	91 e0       	ldi	r25, 0x01	; 1
 a8a:	0e 94 f7 03 	call	0x7ee	; 0x7ee <SD_RSB>
 a8e:	ed 2d       	mov	r30, r13
 a90:	f0 e0       	ldi	r31, 0x00	; 0
 a92:	df 01       	movw	r26, r30
 a94:	a9 55       	subi	r26, 0x59	; 89
 a96:	be 4f       	sbci	r27, 0xFE	; 254
 a98:	4c 91       	ld	r20, X
 a9a:	50 e0       	ldi	r21, 0x00	; 0
 a9c:	60 e0       	ldi	r22, 0x00	; 0
 a9e:	70 e0       	ldi	r23, 0x00	; 0
 aa0:	9a 01       	movw	r18, r20
 aa2:	11 27       	eor	r17, r17
 aa4:	00 27       	eor	r16, r16
 aa6:	df 01       	movw	r26, r30
 aa8:	aa 55       	subi	r26, 0x5A	; 90
 aaa:	be 4f       	sbci	r27, 0xFE	; 254
 aac:	8c 91       	ld	r24, X
 aae:	90 e0       	ldi	r25, 0x00	; 0
 ab0:	98 2f       	mov	r25, r24
 ab2:	88 27       	eor	r24, r24
 ab4:	92 95       	swap	r25
 ab6:	90 7f       	andi	r25, 0xF0	; 240
 ab8:	09 2e       	mov	r0, r25
 aba:	00 0c       	add	r0, r0
 abc:	aa 0b       	sbc	r26, r26
 abe:	bb 0b       	sbc	r27, r27
 ac0:	ac 01       	movw	r20, r24
 ac2:	bd 01       	movw	r22, r26
 ac4:	40 0f       	add	r20, r16
 ac6:	51 1f       	adc	r21, r17
 ac8:	62 1f       	adc	r22, r18
 aca:	73 1f       	adc	r23, r19
 acc:	df 01       	movw	r26, r30
 ace:	a3 55       	subi	r26, 0x53	; 83
 ad0:	be 4f       	sbci	r27, 0xFE	; 254
 ad2:	8c 91       	ld	r24, X
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	98 2f       	mov	r25, r24
 ad8:	88 27       	eor	r24, r24
 ada:	09 2e       	mov	r0, r25
 adc:	00 0c       	add	r0, r0
 ade:	aa 0b       	sbc	r26, r26
 ae0:	bb 0b       	sbc	r27, r27
 ae2:	84 0f       	add	r24, r20
 ae4:	95 1f       	adc	r25, r21
 ae6:	a6 1f       	adc	r26, r22
 ae8:	b7 1f       	adc	r27, r23
 aea:	e4 55       	subi	r30, 0x54	; 84
 aec:	fe 4f       	sbci	r31, 0xFE	; 254
 aee:	20 81       	ld	r18, Z
 af0:	82 0f       	add	r24, r18
 af2:	91 1d       	adc	r25, r1
 af4:	a1 1d       	adc	r26, r1
 af6:	b1 1d       	adc	r27, r1
 af8:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <ClustAddr>
 afc:	90 93 f7 00 	sts	0x00F7, r25	; 0x8000f7 <ClustAddr+0x1>
 b00:	a0 93 f8 00 	sts	0x00F8, r26	; 0x8000f8 <ClustAddr+0x2>
 b04:	b0 93 f9 00 	sts	0x00F9, r27	; 0x8000f9 <ClustAddr+0x3>
 b08:	df 91       	pop	r29
 b0a:	cf 91       	pop	r28
 b0c:	1f 91       	pop	r17
 b0e:	0f 91       	pop	r16
 b10:	ff 90       	pop	r15
 b12:	ef 90       	pop	r14
 b14:	df 90       	pop	r13
 b16:	cf 90       	pop	r12
 b18:	08 95       	ret

00000b1a <FAT32_Read_File>:
 b1a:	cf 92       	push	r12
 b1c:	df 92       	push	r13
 b1e:	ef 92       	push	r14
 b20:	ff 92       	push	r15
 b22:	0f 93       	push	r16
 b24:	1f 93       	push	r17
 b26:	cf 93       	push	r28
 b28:	df 93       	push	r29
 b2a:	0e 94 af 04 	call	0x95e	; 0x95e <FAT32_Open_File>
 b2e:	40 91 19 04 	lds	r20, 0x0419	; 0x800419 <FATStartSec>
 b32:	50 91 1a 04 	lds	r21, 0x041A	; 0x80041a <FATStartSec+0x1>
 b36:	60 e0       	ldi	r22, 0x00	; 0
 b38:	70 e0       	ldi	r23, 0x00	; 0
 b3a:	2b e1       	ldi	r18, 0x1B	; 27
 b3c:	34 e0       	ldi	r19, 0x04	; 4
 b3e:	82 e9       	ldi	r24, 0x92	; 146
 b40:	91 e0       	ldi	r25, 0x01	; 1
 b42:	0e 94 f7 03 	call	0x7ee	; 0x7ee <SD_RSB>
 b46:	88 e7       	ldi	r24, 0x78	; 120
 b48:	90 e0       	ldi	r25, 0x00	; 0
 b4a:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>
 b4e:	8c e9       	ldi	r24, 0x9C	; 156
 b50:	90 e0       	ldi	r25, 0x00	; 0
 b52:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>
 b56:	c0 91 f6 00 	lds	r28, 0x00F6	; 0x8000f6 <ClustAddr>
 b5a:	d0 91 f7 00 	lds	r29, 0x00F7	; 0x8000f7 <ClustAddr+0x1>
 b5e:	cc 0f       	add	r28, r28
 b60:	dd 1f       	adc	r29, r29
 b62:	cc 0f       	add	r28, r28
 b64:	dd 1f       	adc	r29, r29
 b66:	0a c0       	rjmp	.+20     	; 0xb7c <FAT32_Read_File+0x62>
 b68:	fe 01       	movw	r30, r28
 b6a:	ee 56       	subi	r30, 0x6E	; 110
 b6c:	fe 4f       	sbci	r31, 0xFE	; 254
 b6e:	80 81       	ld	r24, Z
 b70:	60 e0       	ldi	r22, 0x00	; 0
 b72:	70 e0       	ldi	r23, 0x00	; 0
 b74:	90 e0       	ldi	r25, 0x00	; 0
 b76:	0e 94 6f 01 	call	0x2de	; 0x2de <USART_Int_StrHEXRAW>
 b7a:	21 96       	adiw	r28, 0x01	; 1
 b7c:	00 91 f6 00 	lds	r16, 0x00F6	; 0x8000f6 <ClustAddr>
 b80:	10 91 f7 00 	lds	r17, 0x00F7	; 0x8000f7 <ClustAddr+0x1>
 b84:	20 91 f8 00 	lds	r18, 0x00F8	; 0x8000f8 <ClustAddr+0x2>
 b88:	30 91 f9 00 	lds	r19, 0x00F9	; 0x8000f9 <ClustAddr+0x3>
 b8c:	d9 01       	movw	r26, r18
 b8e:	c8 01       	movw	r24, r16
 b90:	01 96       	adiw	r24, 0x01	; 1
 b92:	a1 1d       	adc	r26, r1
 b94:	b1 1d       	adc	r27, r1
 b96:	88 0f       	add	r24, r24
 b98:	99 1f       	adc	r25, r25
 b9a:	aa 1f       	adc	r26, r26
 b9c:	bb 1f       	adc	r27, r27
 b9e:	88 0f       	add	r24, r24
 ba0:	99 1f       	adc	r25, r25
 ba2:	aa 1f       	adc	r26, r26
 ba4:	bb 1f       	adc	r27, r27
 ba6:	ae 01       	movw	r20, r28
 ba8:	0d 2e       	mov	r0, r29
 baa:	00 0c       	add	r0, r0
 bac:	66 0b       	sbc	r22, r22
 bae:	77 0b       	sbc	r23, r23
 bb0:	48 17       	cp	r20, r24
 bb2:	59 07       	cpc	r21, r25
 bb4:	6a 07       	cpc	r22, r26
 bb6:	7b 07       	cpc	r23, r27
 bb8:	b8 f2       	brcs	.-82     	; 0xb68 <FAT32_Read_File+0x4e>
 bba:	00 0f       	add	r16, r16
 bbc:	11 1f       	adc	r17, r17
 bbe:	22 1f       	adc	r18, r18
 bc0:	33 1f       	adc	r19, r19
 bc2:	00 0f       	add	r16, r16
 bc4:	11 1f       	adc	r17, r17
 bc6:	22 1f       	adc	r18, r18
 bc8:	33 1f       	adc	r19, r19
 bca:	f8 01       	movw	r30, r16
 bcc:	ee 56       	subi	r30, 0x6E	; 110
 bce:	fe 4f       	sbci	r31, 0xFE	; 254
 bd0:	c0 80       	ld	r12, Z
 bd2:	d9 01       	movw	r26, r18
 bd4:	c8 01       	movw	r24, r16
 bd6:	01 96       	adiw	r24, 0x01	; 1
 bd8:	a1 1d       	adc	r26, r1
 bda:	b1 1d       	adc	r27, r1
 bdc:	fc 01       	movw	r30, r24
 bde:	ee 56       	subi	r30, 0x6E	; 110
 be0:	fe 4f       	sbci	r31, 0xFE	; 254
 be2:	80 81       	ld	r24, Z
 be4:	d1 2c       	mov	r13, r1
 be6:	e1 2c       	mov	r14, r1
 be8:	f1 2c       	mov	r15, r1
 bea:	fe 2c       	mov	r15, r14
 bec:	ed 2c       	mov	r14, r13
 bee:	dc 2c       	mov	r13, r12
 bf0:	cc 24       	eor	r12, r12
 bf2:	c8 0e       	add	r12, r24
 bf4:	d1 1c       	adc	r13, r1
 bf6:	e1 1c       	adc	r14, r1
 bf8:	f1 1c       	adc	r15, r1
 bfa:	d6 01       	movw	r26, r12
 bfc:	99 27       	eor	r25, r25
 bfe:	88 27       	eor	r24, r24
 c00:	b9 01       	movw	r22, r18
 c02:	a8 01       	movw	r20, r16
 c04:	4e 5f       	subi	r20, 0xFE	; 254
 c06:	5f 4f       	sbci	r21, 0xFF	; 255
 c08:	6f 4f       	sbci	r22, 0xFF	; 255
 c0a:	7f 4f       	sbci	r23, 0xFF	; 255
 c0c:	fa 01       	movw	r30, r20
 c0e:	ee 56       	subi	r30, 0x6E	; 110
 c10:	fe 4f       	sbci	r31, 0xFE	; 254
 c12:	c0 80       	ld	r12, Z
 c14:	d1 2c       	mov	r13, r1
 c16:	dc 2c       	mov	r13, r12
 c18:	cc 24       	eor	r12, r12
 c1a:	0d 2c       	mov	r0, r13
 c1c:	00 0c       	add	r0, r0
 c1e:	ee 08       	sbc	r14, r14
 c20:	ff 08       	sbc	r15, r15
 c22:	c8 0e       	add	r12, r24
 c24:	d9 1e       	adc	r13, r25
 c26:	ea 1e       	adc	r14, r26
 c28:	fb 1e       	adc	r15, r27
 c2a:	0d 5f       	subi	r16, 0xFD	; 253
 c2c:	1f 4f       	sbci	r17, 0xFF	; 255
 c2e:	2f 4f       	sbci	r18, 0xFF	; 255
 c30:	3f 4f       	sbci	r19, 0xFF	; 255
 c32:	f8 01       	movw	r30, r16
 c34:	ee 56       	subi	r30, 0x6E	; 110
 c36:	fe 4f       	sbci	r31, 0xFE	; 254
 c38:	80 81       	ld	r24, Z
 c3a:	c8 0e       	add	r12, r24
 c3c:	d1 1c       	adc	r13, r1
 c3e:	e1 1c       	adc	r14, r1
 c40:	f1 1c       	adc	r15, r1
 c42:	68 94       	set
 c44:	15 f8       	bld	r1, 5
 c46:	f6 94       	lsr	r15
 c48:	e7 94       	ror	r14
 c4a:	d7 94       	ror	r13
 c4c:	c7 94       	ror	r12
 c4e:	16 94       	lsr	r1
 c50:	d1 f7       	brne	.-12     	; 0xc46 <FAT32_Read_File+0x12c>
 c52:	80 ea       	ldi	r24, 0xA0	; 160
 c54:	90 e0       	ldi	r25, 0x00	; 0
 c56:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>
 c5a:	40 e0       	ldi	r20, 0x00	; 0
 c5c:	50 e0       	ldi	r21, 0x00	; 0
 c5e:	c7 01       	movw	r24, r14
 c60:	b6 01       	movw	r22, r12
 c62:	0e 94 9c 01 	call	0x338	; 0x338 <USART_Long_StrHEX>
 c66:	87 eb       	ldi	r24, 0xB7	; 183
 c68:	90 e0       	ldi	r25, 0x00	; 0
 c6a:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>
 c6e:	c7 01       	movw	r24, r14
 c70:	b6 01       	movw	r22, r12
 c72:	62 50       	subi	r22, 0x02	; 2
 c74:	71 09       	sbc	r23, r1
 c76:	81 09       	sbc	r24, r1
 c78:	91 09       	sbc	r25, r1
 c7a:	40 e0       	ldi	r20, 0x00	; 0
 c7c:	50 e0       	ldi	r21, 0x00	; 0
 c7e:	0e 94 8c 01 	call	0x318	; 0x318 <USART_Long_Str>
 c82:	8c e9       	ldi	r24, 0x9C	; 156
 c84:	90 e0       	ldi	r25, 0x00	; 0
 c86:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>
 c8a:	df 91       	pop	r29
 c8c:	cf 91       	pop	r28
 c8e:	1f 91       	pop	r17
 c90:	0f 91       	pop	r16
 c92:	ff 90       	pop	r15
 c94:	ef 90       	pop	r14
 c96:	df 90       	pop	r13
 c98:	cf 90       	pop	r12
 c9a:	08 95       	ret

00000c9c <main>:
#include <AM16_FAT32.c>

//#define SDcsp PINA0

int main(void)
{
 c9c:	0f 93       	push	r16
 c9e:	1f 93       	push	r17
 ca0:	cf 93       	push	r28

USART_init(0,8,9600);
 ca2:	20 e8       	ldi	r18, 0x80	; 128
 ca4:	35 e2       	ldi	r19, 0x25	; 37
 ca6:	40 e0       	ldi	r20, 0x00	; 0
 ca8:	50 e0       	ldi	r21, 0x00	; 0
 caa:	68 e0       	ldi	r22, 0x08	; 8
 cac:	70 e0       	ldi	r23, 0x00	; 0
 cae:	80 e0       	ldi	r24, 0x00	; 0
 cb0:	90 e0       	ldi	r25, 0x00	; 0
 cb2:	0e 94 49 00 	call	0x92	; 0x92 <USART_init>
SPI_MAST_Init(0,128,0,0,0);
 cb6:	00 e0       	ldi	r16, 0x00	; 0
 cb8:	10 e0       	ldi	r17, 0x00	; 0
 cba:	20 e0       	ldi	r18, 0x00	; 0
 cbc:	30 e0       	ldi	r19, 0x00	; 0
 cbe:	40 e0       	ldi	r20, 0x00	; 0
 cc0:	50 e0       	ldi	r21, 0x00	; 0
 cc2:	60 e8       	ldi	r22, 0x80	; 128
 cc4:	70 e0       	ldi	r23, 0x00	; 0
 cc6:	80 e0       	ldi	r24, 0x00	; 0
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	0e 94 22 02 	call	0x444	; 0x444 <SPI_MAST_Init>


char SDIS = SD_Init();
 cce:	0e 94 a7 03 	call	0x74e	; 0x74e <SD_Init>
 cd2:	c8 2f       	mov	r28, r24
USART_Send("\r\nHello Void. I have awoken\r\n Response | ");
 cd4:	81 ec       	ldi	r24, 0xC1	; 193
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>
USART_Int_Str(SDIS,0);
 cdc:	60 e0       	ldi	r22, 0x00	; 0
 cde:	70 e0       	ldi	r23, 0x00	; 0
 ce0:	8c 2f       	mov	r24, r28
 ce2:	90 e0       	ldi	r25, 0x00	; 0
 ce4:	0e 94 5f 01 	call	0x2be	; 0x2be <USART_Int_Str>


if(SDIS!=5){
 ce8:	c5 30       	cpi	r28, 0x05	; 5
 cea:	11 f0       	breq	.+4      	; 0xcf0 <main+0x54>
	
	
SD_Reset();
 cec:	0e 94 c8 02 	call	0x590	; 0x590 <SD_Reset>
}


if(SDIS==5){
 cf0:	c5 30       	cpi	r28, 0x05	; 5
 cf2:	51 f4       	brne	.+20     	; 0xd08 <main+0x6c>
FAT32_Init();
 cf4:	0e 94 57 04 	call	0x8ae	; 0x8ae <FAT32_Init>
USART_Send("\r\n");
 cf8:	8d e9       	ldi	r24, 0x9D	; 157
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	0e 94 10 01 	call	0x220	; 0x220 <USART_Send>

FAT32_Read_File("HELLO");
 d00:	8b ee       	ldi	r24, 0xEB	; 235
 d02:	90 e0       	ldi	r25, 0x00	; 0
 d04:	0e 94 8d 05 	call	0xb1a	; 0xb1a <FAT32_Read_File>
}
}
 d08:	80 e0       	ldi	r24, 0x00	; 0
 d0a:	90 e0       	ldi	r25, 0x00	; 0
 d0c:	cf 91       	pop	r28
 d0e:	1f 91       	pop	r17
 d10:	0f 91       	pop	r16
 d12:	08 95       	ret

00000d14 <__udivmodsi4>:
 d14:	a1 e2       	ldi	r26, 0x21	; 33
 d16:	1a 2e       	mov	r1, r26
 d18:	aa 1b       	sub	r26, r26
 d1a:	bb 1b       	sub	r27, r27
 d1c:	fd 01       	movw	r30, r26
 d1e:	0d c0       	rjmp	.+26     	; 0xd3a <__udivmodsi4_ep>

00000d20 <__udivmodsi4_loop>:
 d20:	aa 1f       	adc	r26, r26
 d22:	bb 1f       	adc	r27, r27
 d24:	ee 1f       	adc	r30, r30
 d26:	ff 1f       	adc	r31, r31
 d28:	a2 17       	cp	r26, r18
 d2a:	b3 07       	cpc	r27, r19
 d2c:	e4 07       	cpc	r30, r20
 d2e:	f5 07       	cpc	r31, r21
 d30:	20 f0       	brcs	.+8      	; 0xd3a <__udivmodsi4_ep>
 d32:	a2 1b       	sub	r26, r18
 d34:	b3 0b       	sbc	r27, r19
 d36:	e4 0b       	sbc	r30, r20
 d38:	f5 0b       	sbc	r31, r21

00000d3a <__udivmodsi4_ep>:
 d3a:	66 1f       	adc	r22, r22
 d3c:	77 1f       	adc	r23, r23
 d3e:	88 1f       	adc	r24, r24
 d40:	99 1f       	adc	r25, r25
 d42:	1a 94       	dec	r1
 d44:	69 f7       	brne	.-38     	; 0xd20 <__udivmodsi4_loop>
 d46:	60 95       	com	r22
 d48:	70 95       	com	r23
 d4a:	80 95       	com	r24
 d4c:	90 95       	com	r25
 d4e:	9b 01       	movw	r18, r22
 d50:	ac 01       	movw	r20, r24
 d52:	bd 01       	movw	r22, r26
 d54:	cf 01       	movw	r24, r30
 d56:	08 95       	ret

00000d58 <__itoa_ncheck>:
 d58:	bb 27       	eor	r27, r27
 d5a:	4a 30       	cpi	r20, 0x0A	; 10
 d5c:	31 f4       	brne	.+12     	; 0xd6a <__itoa_ncheck+0x12>
 d5e:	99 23       	and	r25, r25
 d60:	22 f4       	brpl	.+8      	; 0xd6a <__itoa_ncheck+0x12>
 d62:	bd e2       	ldi	r27, 0x2D	; 45
 d64:	90 95       	com	r25
 d66:	81 95       	neg	r24
 d68:	9f 4f       	sbci	r25, 0xFF	; 255
 d6a:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__utoa_common>

00000d6e <__ltoa_ncheck>:
 d6e:	bb 27       	eor	r27, r27
 d70:	2a 30       	cpi	r18, 0x0A	; 10
 d72:	51 f4       	brne	.+20     	; 0xd88 <__ltoa_ncheck+0x1a>
 d74:	99 23       	and	r25, r25
 d76:	42 f4       	brpl	.+16     	; 0xd88 <__ltoa_ncheck+0x1a>
 d78:	bd e2       	ldi	r27, 0x2D	; 45
 d7a:	90 95       	com	r25
 d7c:	80 95       	com	r24
 d7e:	70 95       	com	r23
 d80:	61 95       	neg	r22
 d82:	7f 4f       	sbci	r23, 0xFF	; 255
 d84:	8f 4f       	sbci	r24, 0xFF	; 255
 d86:	9f 4f       	sbci	r25, 0xFF	; 255
 d88:	0c 94 c7 06 	jmp	0xd8e	; 0xd8e <__ultoa_common>

00000d8c <__ultoa_ncheck>:
 d8c:	bb 27       	eor	r27, r27

00000d8e <__ultoa_common>:
 d8e:	fa 01       	movw	r30, r20
 d90:	a6 2f       	mov	r26, r22
 d92:	62 17       	cp	r22, r18
 d94:	71 05       	cpc	r23, r1
 d96:	81 05       	cpc	r24, r1
 d98:	91 05       	cpc	r25, r1
 d9a:	33 0b       	sbc	r19, r19
 d9c:	30 fb       	bst	r19, 0
 d9e:	66 f0       	brts	.+24     	; 0xdb8 <__ultoa_common+0x2a>
 da0:	aa 27       	eor	r26, r26
 da2:	66 0f       	add	r22, r22
 da4:	77 1f       	adc	r23, r23
 da6:	88 1f       	adc	r24, r24
 da8:	99 1f       	adc	r25, r25
 daa:	aa 1f       	adc	r26, r26
 dac:	a2 17       	cp	r26, r18
 dae:	10 f0       	brcs	.+4      	; 0xdb4 <__ultoa_common+0x26>
 db0:	a2 1b       	sub	r26, r18
 db2:	63 95       	inc	r22
 db4:	38 50       	subi	r19, 0x08	; 8
 db6:	a9 f7       	brne	.-22     	; 0xda2 <__ultoa_common+0x14>
 db8:	a0 5d       	subi	r26, 0xD0	; 208
 dba:	aa 33       	cpi	r26, 0x3A	; 58
 dbc:	08 f0       	brcs	.+2      	; 0xdc0 <__ultoa_common+0x32>
 dbe:	a9 5d       	subi	r26, 0xD9	; 217
 dc0:	a1 93       	st	Z+, r26
 dc2:	36 f7       	brtc	.-52     	; 0xd90 <__ultoa_common+0x2>
 dc4:	b1 11       	cpse	r27, r1
 dc6:	b1 93       	st	Z+, r27
 dc8:	10 82       	st	Z, r1
 dca:	ca 01       	movw	r24, r20
 dcc:	0c 94 02 07 	jmp	0xe04	; 0xe04 <strrev>

00000dd0 <__utoa_ncheck>:
 dd0:	bb 27       	eor	r27, r27

00000dd2 <__utoa_common>:
 dd2:	fb 01       	movw	r30, r22
 dd4:	55 27       	eor	r21, r21
 dd6:	aa 27       	eor	r26, r26
 dd8:	88 0f       	add	r24, r24
 dda:	99 1f       	adc	r25, r25
 ddc:	aa 1f       	adc	r26, r26
 dde:	a4 17       	cp	r26, r20
 de0:	10 f0       	brcs	.+4      	; 0xde6 <__utoa_common+0x14>
 de2:	a4 1b       	sub	r26, r20
 de4:	83 95       	inc	r24
 de6:	50 51       	subi	r21, 0x10	; 16
 de8:	b9 f7       	brne	.-18     	; 0xdd8 <__utoa_common+0x6>
 dea:	a0 5d       	subi	r26, 0xD0	; 208
 dec:	aa 33       	cpi	r26, 0x3A	; 58
 dee:	08 f0       	brcs	.+2      	; 0xdf2 <__utoa_common+0x20>
 df0:	a9 5d       	subi	r26, 0xD9	; 217
 df2:	a1 93       	st	Z+, r26
 df4:	00 97       	sbiw	r24, 0x00	; 0
 df6:	79 f7       	brne	.-34     	; 0xdd6 <__utoa_common+0x4>
 df8:	b1 11       	cpse	r27, r1
 dfa:	b1 93       	st	Z+, r27
 dfc:	11 92       	st	Z+, r1
 dfe:	cb 01       	movw	r24, r22
 e00:	0c 94 02 07 	jmp	0xe04	; 0xe04 <strrev>

00000e04 <strrev>:
 e04:	dc 01       	movw	r26, r24
 e06:	fc 01       	movw	r30, r24
 e08:	67 2f       	mov	r22, r23
 e0a:	71 91       	ld	r23, Z+
 e0c:	77 23       	and	r23, r23
 e0e:	e1 f7       	brne	.-8      	; 0xe08 <strrev+0x4>
 e10:	32 97       	sbiw	r30, 0x02	; 2
 e12:	04 c0       	rjmp	.+8      	; 0xe1c <strrev+0x18>
 e14:	7c 91       	ld	r23, X
 e16:	6d 93       	st	X+, r22
 e18:	70 83       	st	Z, r23
 e1a:	62 91       	ld	r22, -Z
 e1c:	ae 17       	cp	r26, r30
 e1e:	bf 07       	cpc	r27, r31
 e20:	c8 f3       	brcs	.-14     	; 0xe14 <strrev+0x10>
 e22:	08 95       	ret

00000e24 <_exit>:
 e24:	f8 94       	cli

00000e26 <__stop_program>:
 e26:	ff cf       	rjmp	.-2      	; 0xe26 <__stop_program>
