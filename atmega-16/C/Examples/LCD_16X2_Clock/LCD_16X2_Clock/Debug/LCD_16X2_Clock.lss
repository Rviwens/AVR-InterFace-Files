
LCD_16X2_Clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003e  00800060  000009c0  00000a54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000220  0080009e  0080009e  00000a92  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a92  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ac4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  00000b00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000031de  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b3  00000000  00000000  00003f46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a3b  00000000  00000000  000048f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000924  00000000  00000000  00006334  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009a1  00000000  00000000  00006c58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003800  00000000  00000000  000075f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000288  00000000  00000000  0000adf9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ec       	ldi	r30, 0xC0	; 192
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 39       	cpi	r26, 0x9E	; 158
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	22 e0       	ldi	r18, 0x02	; 2
  78:	ae e9       	ldi	r26, 0x9E	; 158
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 3b       	cpi	r26, 0xBE	; 190
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ed 03 	call	0x7da	; 0x7da <main>
  8a:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <E_Pulse>:
	I2C_Write(_day);		/* Write day on 03 location */
	I2C_Write(_date);		/* Write date on 04 location */
	I2C_Write(_month);		/* Write month on 05 location */
	I2C_Write(_year);		/* Write year on 06 location */
	I2C_Stop();			/* Stop I2C communication */
}
  92:	88 b3       	in	r24, 0x18	; 24
  94:	82 60       	ori	r24, 0x02	; 2
  96:	88 bb       	out	0x18, r24	; 24
  98:	85 e8       	ldi	r24, 0x85	; 133
  9a:	8a 95       	dec	r24
  9c:	f1 f7       	brne	.-4      	; 0x9a <E_Pulse+0x8>
  9e:	00 00       	nop
  a0:	88 b3       	in	r24, 0x18	; 24
  a2:	8d 7f       	andi	r24, 0xFD	; 253
  a4:	88 bb       	out	0x18, r24	; 24
  a6:	85 e8       	ldi	r24, 0x85	; 133
  a8:	8a 95       	dec	r24
  aa:	f1 f7       	brne	.-4      	; 0xa8 <E_Pulse+0x16>
  ac:	00 00       	nop
  ae:	08 95       	ret

000000b0 <LCD_Command>:
  b0:	cf 93       	push	r28
  b2:	c8 2f       	mov	r28, r24
  b4:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <Mode>
  b8:	90 91 b9 02 	lds	r25, 0x02B9	; 0x8002b9 <Mode+0x1>
  bc:	08 97       	sbiw	r24, 0x08	; 8
  be:	31 f4       	brne	.+12     	; 0xcc <LCD_Command+0x1c>
  c0:	c8 bb       	out	0x18, r28	; 24
  c2:	88 b3       	in	r24, 0x18	; 24
  c4:	8e 7f       	andi	r24, 0xFE	; 254
  c6:	88 bb       	out	0x18, r24	; 24
  c8:	0e 94 49 00 	call	0x92	; 0x92 <E_Pulse>
  cc:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <Mode>
  d0:	90 91 b9 02 	lds	r25, 0x02B9	; 0x8002b9 <Mode+0x1>
  d4:	04 97       	sbiw	r24, 0x04	; 4
  d6:	91 f5       	brne	.+100    	; 0x13c <LCD_Command+0x8c>
  d8:	88 b3       	in	r24, 0x18	; 24
  da:	8f 70       	andi	r24, 0x0F	; 15
  dc:	9c 2f       	mov	r25, r28
  de:	90 7f       	andi	r25, 0xF0	; 240
  e0:	89 2b       	or	r24, r25
  e2:	88 bb       	out	0x18, r24	; 24
  e4:	88 b3       	in	r24, 0x18	; 24
  e6:	8e 7f       	andi	r24, 0xFE	; 254
  e8:	88 bb       	out	0x18, r24	; 24
  ea:	88 b3       	in	r24, 0x18	; 24
  ec:	82 60       	ori	r24, 0x02	; 2
  ee:	88 bb       	out	0x18, r24	; 24
  f0:	36 e0       	ldi	r19, 0x06	; 6
  f2:	3a 95       	dec	r19
  f4:	f1 f7       	brne	.-4      	; 0xf2 <LCD_Command+0x42>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <LCD_Command+0x48>
  f8:	88 b3       	in	r24, 0x18	; 24
  fa:	8d 7f       	andi	r24, 0xFD	; 253
  fc:	88 bb       	out	0x18, r24	; 24
  fe:	83 ef       	ldi	r24, 0xF3	; 243
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Command+0x52>
 106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Command+0x58>
 108:	00 00       	nop
 10a:	28 b3       	in	r18, 0x18	; 24
 10c:	30 e1       	ldi	r19, 0x10	; 16
 10e:	c3 9f       	mul	r28, r19
 110:	c0 01       	movw	r24, r0
 112:	11 24       	eor	r1, r1
 114:	92 2f       	mov	r25, r18
 116:	9f 70       	andi	r25, 0x0F	; 15
 118:	89 2b       	or	r24, r25
 11a:	88 bb       	out	0x18, r24	; 24
 11c:	88 b3       	in	r24, 0x18	; 24
 11e:	82 60       	ori	r24, 0x02	; 2
 120:	88 bb       	out	0x18, r24	; 24
 122:	86 e0       	ldi	r24, 0x06	; 6
 124:	8a 95       	dec	r24
 126:	f1 f7       	brne	.-4      	; 0x124 <LCD_Command+0x74>
 128:	00 c0       	rjmp	.+0      	; 0x12a <LCD_Command+0x7a>
 12a:	88 b3       	in	r24, 0x18	; 24
 12c:	8d 7f       	andi	r24, 0xFD	; 253
 12e:	88 bb       	out	0x18, r24	; 24
 130:	8f e0       	ldi	r24, 0x0F	; 15
 132:	97 e2       	ldi	r25, 0x27	; 39
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <LCD_Command+0x84>
 138:	00 c0       	rjmp	.+0      	; 0x13a <LCD_Command+0x8a>
 13a:	00 00       	nop
 13c:	18 ba       	out	0x18, r1	; 24
 13e:	cf 91       	pop	r28
 140:	08 95       	ret

00000142 <LCD_character>:
 142:	cf 93       	push	r28
 144:	c8 2f       	mov	r28, r24
 146:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <Mode>
 14a:	90 91 b9 02 	lds	r25, 0x02B9	; 0x8002b9 <Mode+0x1>
 14e:	08 97       	sbiw	r24, 0x08	; 8
 150:	39 f4       	brne	.+14     	; 0x160 <LCD_character+0x1e>
 152:	c8 bb       	out	0x18, r28	; 24
 154:	88 b3       	in	r24, 0x18	; 24
 156:	81 60       	ori	r24, 0x01	; 1
 158:	88 bb       	out	0x18, r24	; 24
 15a:	0e 94 49 00 	call	0x92	; 0x92 <E_Pulse>
 15e:	18 ba       	out	0x18, r1	; 24
 160:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <Mode>
 164:	90 91 b9 02 	lds	r25, 0x02B9	; 0x8002b9 <Mode+0x1>
 168:	04 97       	sbiw	r24, 0x04	; 4
 16a:	91 f5       	brne	.+100    	; 0x1d0 <LCD_character+0x8e>
 16c:	88 b3       	in	r24, 0x18	; 24
 16e:	8f 70       	andi	r24, 0x0F	; 15
 170:	9c 2f       	mov	r25, r28
 172:	90 7f       	andi	r25, 0xF0	; 240
 174:	89 2b       	or	r24, r25
 176:	88 bb       	out	0x18, r24	; 24
 178:	88 b3       	in	r24, 0x18	; 24
 17a:	81 60       	ori	r24, 0x01	; 1
 17c:	88 bb       	out	0x18, r24	; 24
 17e:	88 b3       	in	r24, 0x18	; 24
 180:	82 60       	ori	r24, 0x02	; 2
 182:	88 bb       	out	0x18, r24	; 24
 184:	36 e0       	ldi	r19, 0x06	; 6
 186:	3a 95       	dec	r19
 188:	f1 f7       	brne	.-4      	; 0x186 <LCD_character+0x44>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <LCD_character+0x4a>
 18c:	88 b3       	in	r24, 0x18	; 24
 18e:	8d 7f       	andi	r24, 0xFD	; 253
 190:	88 bb       	out	0x18, r24	; 24
 192:	83 ef       	ldi	r24, 0xF3	; 243
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <LCD_character+0x54>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <LCD_character+0x5a>
 19c:	00 00       	nop
 19e:	28 b3       	in	r18, 0x18	; 24
 1a0:	30 e1       	ldi	r19, 0x10	; 16
 1a2:	c3 9f       	mul	r28, r19
 1a4:	c0 01       	movw	r24, r0
 1a6:	11 24       	eor	r1, r1
 1a8:	92 2f       	mov	r25, r18
 1aa:	9f 70       	andi	r25, 0x0F	; 15
 1ac:	89 2b       	or	r24, r25
 1ae:	88 bb       	out	0x18, r24	; 24
 1b0:	88 b3       	in	r24, 0x18	; 24
 1b2:	82 60       	ori	r24, 0x02	; 2
 1b4:	88 bb       	out	0x18, r24	; 24
 1b6:	86 e0       	ldi	r24, 0x06	; 6
 1b8:	8a 95       	dec	r24
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <LCD_character+0x76>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <LCD_character+0x7c>
 1be:	88 b3       	in	r24, 0x18	; 24
 1c0:	8d 7f       	andi	r24, 0xFD	; 253
 1c2:	88 bb       	out	0x18, r24	; 24
 1c4:	8f e0       	ldi	r24, 0x0F	; 15
 1c6:	97 e2       	ldi	r25, 0x27	; 39
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <LCD_character+0x86>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <LCD_character+0x8c>
 1ce:	00 00       	nop
 1d0:	18 ba       	out	0x18, r1	; 24
 1d2:	cf 91       	pop	r28
 1d4:	08 95       	ret

000001d6 <LCD_Init>:
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	90 93 b9 02 	sts	0x02B9, r25	; 0x8002b9 <Mode+0x1>
 1dc:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <Mode>
 1e0:	08 97       	sbiw	r24, 0x08	; 8
 1e2:	d9 f4       	brne	.+54     	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
 1e4:	8c e0       	ldi	r24, 0x0C	; 12
 1e6:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 1ea:	2f e7       	ldi	r18, 0x7F	; 127
 1ec:	84 e8       	ldi	r24, 0x84	; 132
 1ee:	9e e1       	ldi	r25, 0x1E	; 30
 1f0:	21 50       	subi	r18, 0x01	; 1
 1f2:	80 40       	sbci	r24, 0x00	; 0
 1f4:	90 40       	sbci	r25, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <LCD_Init+0x1a>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <LCD_Init+0x24>
 1fa:	00 00       	nop
 1fc:	88 e3       	ldi	r24, 0x38	; 56
 1fe:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 202:	8e e0       	ldi	r24, 0x0E	; 14
 204:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 208:	86 e0       	ldi	r24, 0x06	; 6
 20a:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 214:	80 e8       	ldi	r24, 0x80	; 128
 216:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 21a:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <Mode>
 21e:	90 91 b9 02 	lds	r25, 0x02B9	; 0x8002b9 <Mode+0x1>
 222:	04 97       	sbiw	r24, 0x04	; 4
 224:	91 f4       	brne	.+36     	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
 226:	83 e3       	ldi	r24, 0x33	; 51
 228:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 22c:	82 e3       	ldi	r24, 0x32	; 50
 22e:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 232:	88 e2       	ldi	r24, 0x28	; 40
 234:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 238:	8e e0       	ldi	r24, 0x0E	; 14
 23a:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 23e:	80 e1       	ldi	r24, 0x10	; 16
 240:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 24a:	08 95       	ret

0000024c <LCD_Clear>:
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 252:	08 95       	ret

00000254 <LCD_Set_Cursor>:
 254:	00 97       	sbiw	r24, 0x00	; 0
 256:	49 f4       	brne	.+18     	; 0x26a <LCD_Set_Cursor+0x16>
 258:	60 31       	cpi	r22, 0x10	; 16
 25a:	71 05       	cpc	r23, r1
 25c:	34 f4       	brge	.+12     	; 0x26a <LCD_Set_Cursor+0x16>
 25e:	86 2f       	mov	r24, r22
 260:	8f 70       	andi	r24, 0x0F	; 15
 262:	80 68       	ori	r24, 0x80	; 128
 264:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 268:	08 95       	ret
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	41 f4       	brne	.+16     	; 0x27e <LCD_Set_Cursor+0x2a>
 26e:	60 31       	cpi	r22, 0x10	; 16
 270:	71 05       	cpc	r23, r1
 272:	2c f4       	brge	.+10     	; 0x27e <LCD_Set_Cursor+0x2a>
 274:	86 2f       	mov	r24, r22
 276:	8f 70       	andi	r24, 0x0F	; 15
 278:	80 6c       	ori	r24, 0xC0	; 192
 27a:	0e 94 58 00 	call	0xb0	; 0xb0 <LCD_Command>
 27e:	08 95       	ret

00000280 <LCD_String>:
 280:	0f 93       	push	r16
 282:	1f 93       	push	r17
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	8c 01       	movw	r16, r24
 28a:	c0 e0       	ldi	r28, 0x00	; 0
 28c:	d0 e0       	ldi	r29, 0x00	; 0
 28e:	03 c0       	rjmp	.+6      	; 0x296 <LCD_String+0x16>
 290:	0e 94 a1 00 	call	0x142	; 0x142 <LCD_character>
 294:	21 96       	adiw	r28, 0x01	; 1
 296:	f8 01       	movw	r30, r16
 298:	ec 0f       	add	r30, r28
 29a:	fd 1f       	adc	r31, r29
 29c:	80 81       	ld	r24, Z
 29e:	81 11       	cpse	r24, r1
 2a0:	f7 cf       	rjmp	.-18     	; 0x290 <LCD_String+0x10>
 2a2:	df 91       	pop	r29
 2a4:	cf 91       	pop	r28
 2a6:	1f 91       	pop	r17
 2a8:	0f 91       	pop	r16
 2aa:	08 95       	ret

000002ac <LCD_Int_Str>:
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	cd b7       	in	r28, 0x3d	; 61
 2b2:	de b7       	in	r29, 0x3e	; 62
 2b4:	c4 56       	subi	r28, 0x64	; 100
 2b6:	d1 09       	sbc	r29, r1
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	f8 94       	cli
 2bc:	de bf       	out	0x3e, r29	; 62
 2be:	0f be       	out	0x3f, r0	; 63
 2c0:	cd bf       	out	0x3d, r28	; 61
 2c2:	ab 01       	movw	r20, r22
 2c4:	be 01       	movw	r22, r28
 2c6:	6f 5f       	subi	r22, 0xFF	; 255
 2c8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ca:	0e 94 9e 04 	call	0x93c	; 0x93c <itoa>
 2ce:	ce 01       	movw	r24, r28
 2d0:	01 96       	adiw	r24, 0x01	; 1
 2d2:	0e 94 40 01 	call	0x280	; 0x280 <LCD_String>
 2d6:	cc 59       	subi	r28, 0x9C	; 156
 2d8:	df 4f       	sbci	r29, 0xFF	; 255
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	f8 94       	cli
 2de:	de bf       	out	0x3e, r29	; 62
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	cd bf       	out	0x3d, r28	; 61
 2e4:	df 91       	pop	r29
 2e6:	cf 91       	pop	r28
 2e8:	08 95       	ret

000002ea <__vector_3>:
 2ea:	1f 92       	push	r1
 2ec:	0f 92       	push	r0
 2ee:	0f b6       	in	r0, 0x3f	; 63
 2f0:	0f 92       	push	r0
 2f2:	11 24       	eor	r1, r1
 2f4:	8f 93       	push	r24
 2f6:	82 b3       	in	r24, 0x12	; 18
 2f8:	80 58       	subi	r24, 0x80	; 128
 2fa:	82 bb       	out	0x12, r24	; 18
 2fc:	8f 91       	pop	r24
 2fe:	0f 90       	pop	r0
 300:	0f be       	out	0x3f, r0	; 63
 302:	0f 90       	pop	r0
 304:	1f 90       	pop	r1
 306:	18 95       	reti

00000308 <USART_init>:
 308:	cf 92       	push	r12
 30a:	df 92       	push	r13
 30c:	ef 92       	push	r14
 30e:	ff 92       	push	r15
 310:	fc 01       	movw	r30, r24
 312:	20 93 b2 02 	sts	0x02B2, r18	; 0x8002b2 <BAUD>
 316:	30 93 b3 02 	sts	0x02B3, r19	; 0x8002b3 <BAUD+0x1>
 31a:	40 93 b4 02 	sts	0x02B4, r20	; 0x8002b4 <BAUD+0x2>
 31e:	50 93 b5 02 	sts	0x02B5, r21	; 0x8002b5 <BAUD+0x3>
 322:	9a b1       	in	r25, 0x0a	; 10
 324:	98 69       	ori	r25, 0x98	; 152
 326:	9a b9       	out	0x0a, r25	; 10
 328:	e1 30       	cpi	r30, 0x01	; 1
 32a:	f1 05       	cpc	r31, r1
 32c:	61 f0       	breq	.+24     	; 0x346 <USART_init+0x3e>
 32e:	e2 30       	cpi	r30, 0x02	; 2
 330:	f1 05       	cpc	r31, r1
 332:	69 f0       	breq	.+26     	; 0x34e <USART_init+0x46>
 334:	ef 2b       	or	r30, r31
 336:	71 f4       	brne	.+28     	; 0x354 <USART_init+0x4c>
 338:	80 b5       	in	r24, 0x20	; 32
 33a:	8f 7e       	andi	r24, 0xEF	; 239
 33c:	80 bd       	out	0x20, r24	; 32
 33e:	80 b5       	in	r24, 0x20	; 32
 340:	8f 7d       	andi	r24, 0xDF	; 223
 342:	80 bd       	out	0x20, r24	; 32
 344:	07 c0       	rjmp	.+14     	; 0x354 <USART_init+0x4c>
 346:	80 b5       	in	r24, 0x20	; 32
 348:	80 63       	ori	r24, 0x30	; 48
 34a:	80 bd       	out	0x20, r24	; 32
 34c:	03 c0       	rjmp	.+6      	; 0x354 <USART_init+0x4c>
 34e:	80 b5       	in	r24, 0x20	; 32
 350:	80 62       	ori	r24, 0x20	; 32
 352:	80 bd       	out	0x20, r24	; 32
 354:	67 30       	cpi	r22, 0x07	; 7
 356:	71 05       	cpc	r23, r1
 358:	e9 f0       	breq	.+58     	; 0x394 <USART_init+0x8c>
 35a:	3c f4       	brge	.+14     	; 0x36a <USART_init+0x62>
 35c:	65 30       	cpi	r22, 0x05	; 5
 35e:	71 05       	cpc	r23, r1
 360:	59 f0       	breq	.+22     	; 0x378 <USART_init+0x70>
 362:	66 30       	cpi	r22, 0x06	; 6
 364:	71 05       	cpc	r23, r1
 366:	91 f0       	breq	.+36     	; 0x38c <USART_init+0x84>
 368:	23 c0       	rjmp	.+70     	; 0x3b0 <USART_init+0xa8>
 36a:	68 30       	cpi	r22, 0x08	; 8
 36c:	71 05       	cpc	r23, r1
 36e:	b1 f0       	breq	.+44     	; 0x39c <USART_init+0x94>
 370:	69 30       	cpi	r22, 0x09	; 9
 372:	71 05       	cpc	r23, r1
 374:	d1 f0       	breq	.+52     	; 0x3aa <USART_init+0xa2>
 376:	1c c0       	rjmp	.+56     	; 0x3b0 <USART_init+0xa8>
 378:	80 b5       	in	r24, 0x20	; 32
 37a:	8d 7f       	andi	r24, 0xFD	; 253
 37c:	80 bd       	out	0x20, r24	; 32
 37e:	80 b5       	in	r24, 0x20	; 32
 380:	8b 7f       	andi	r24, 0xFB	; 251
 382:	80 bd       	out	0x20, r24	; 32
 384:	80 b5       	in	r24, 0x20	; 32
 386:	8b 7f       	andi	r24, 0xFB	; 251
 388:	80 bd       	out	0x20, r24	; 32
 38a:	12 c0       	rjmp	.+36     	; 0x3b0 <USART_init+0xa8>
 38c:	80 b5       	in	r24, 0x20	; 32
 38e:	82 60       	ori	r24, 0x02	; 2
 390:	80 bd       	out	0x20, r24	; 32
 392:	0e c0       	rjmp	.+28     	; 0x3b0 <USART_init+0xa8>
 394:	80 b5       	in	r24, 0x20	; 32
 396:	84 60       	ori	r24, 0x04	; 4
 398:	80 bd       	out	0x20, r24	; 32
 39a:	0a c0       	rjmp	.+20     	; 0x3b0 <USART_init+0xa8>
 39c:	80 b5       	in	r24, 0x20	; 32
 39e:	84 60       	ori	r24, 0x04	; 4
 3a0:	80 bd       	out	0x20, r24	; 32
 3a2:	80 b5       	in	r24, 0x20	; 32
 3a4:	82 60       	ori	r24, 0x02	; 2
 3a6:	80 bd       	out	0x20, r24	; 32
 3a8:	03 c0       	rjmp	.+6      	; 0x3b0 <USART_init+0xa8>
 3aa:	80 b5       	in	r24, 0x20	; 32
 3ac:	86 60       	ori	r24, 0x06	; 6
 3ae:	80 bd       	out	0x20, r24	; 32
 3b0:	0f 2e       	mov	r0, r31
 3b2:	f0 ed       	ldi	r31, 0xD0	; 208
 3b4:	cf 2e       	mov	r12, r31
 3b6:	f2 e1       	ldi	r31, 0x12	; 18
 3b8:	df 2e       	mov	r13, r31
 3ba:	f3 e1       	ldi	r31, 0x13	; 19
 3bc:	ef 2e       	mov	r14, r31
 3be:	f1 2c       	mov	r15, r1
 3c0:	f0 2d       	mov	r31, r0
 3c2:	20 91 b2 02 	lds	r18, 0x02B2	; 0x8002b2 <BAUD>
 3c6:	30 91 b3 02 	lds	r19, 0x02B3	; 0x8002b3 <BAUD+0x1>
 3ca:	40 91 b4 02 	lds	r20, 0x02B4	; 0x8002b4 <BAUD+0x2>
 3ce:	50 91 b5 02 	lds	r21, 0x02B5	; 0x8002b5 <BAUD+0x3>
 3d2:	c7 01       	movw	r24, r14
 3d4:	b6 01       	movw	r22, r12
 3d6:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <__udivmodsi4>
 3da:	21 50       	subi	r18, 0x01	; 1
 3dc:	29 b9       	out	0x09, r18	; 9
 3de:	20 91 b2 02 	lds	r18, 0x02B2	; 0x8002b2 <BAUD>
 3e2:	30 91 b3 02 	lds	r19, 0x02B3	; 0x8002b3 <BAUD+0x1>
 3e6:	40 91 b4 02 	lds	r20, 0x02B4	; 0x8002b4 <BAUD+0x2>
 3ea:	50 91 b5 02 	lds	r21, 0x02B5	; 0x8002b5 <BAUD+0x3>
 3ee:	c7 01       	movw	r24, r14
 3f0:	b6 01       	movw	r22, r12
 3f2:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <__udivmodsi4>
 3f6:	da 01       	movw	r26, r20
 3f8:	c9 01       	movw	r24, r18
 3fa:	01 97       	sbiw	r24, 0x01	; 1
 3fc:	a1 09       	sbc	r26, r1
 3fe:	b1 09       	sbc	r27, r1
 400:	89 2f       	mov	r24, r25
 402:	9a 2f       	mov	r25, r26
 404:	ab 2f       	mov	r26, r27
 406:	bb 27       	eor	r27, r27
 408:	80 bd       	out	0x20, r24	; 32
 40a:	ff 90       	pop	r15
 40c:	ef 90       	pop	r14
 40e:	df 90       	pop	r13
 410:	cf 90       	pop	r12
 412:	08 95       	ret

00000414 <T>:
 414:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <BAUD>
 418:	90 91 b3 02 	lds	r25, 0x02B3	; 0x8002b3 <BAUD+0x1>
 41c:	a0 91 b4 02 	lds	r26, 0x02B4	; 0x8002b4 <BAUD+0x2>
 420:	b0 91 b5 02 	lds	r27, 0x02B5	; 0x8002b5 <BAUD+0x3>
 424:	89 32       	cpi	r24, 0x29	; 41
 426:	93 42       	sbci	r25, 0x23	; 35
 428:	a1 05       	cpc	r26, r1
 42a:	b1 05       	cpc	r27, r1
 42c:	34 f4       	brge	.+12     	; 0x43a <T+0x26>
 42e:	87 e8       	ldi	r24, 0x87	; 135
 430:	93 e1       	ldi	r25, 0x13	; 19
 432:	01 97       	sbiw	r24, 0x01	; 1
 434:	f1 f7       	brne	.-4      	; 0x432 <T+0x1e>
 436:	00 c0       	rjmp	.+0      	; 0x438 <T+0x24>
 438:	00 00       	nop
 43a:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <BAUD>
 43e:	90 91 b3 02 	lds	r25, 0x02B3	; 0x8002b3 <BAUD+0x1>
 442:	a0 91 b4 02 	lds	r26, 0x02B4	; 0x8002b4 <BAUD+0x2>
 446:	b0 91 b5 02 	lds	r27, 0x02B5	; 0x8002b5 <BAUD+0x3>
 44a:	89 38       	cpi	r24, 0x89	; 137
 44c:	93 41       	sbci	r25, 0x13	; 19
 44e:	a1 05       	cpc	r26, r1
 450:	b1 05       	cpc	r27, r1
 452:	34 f4       	brge	.+12     	; 0x460 <__stack+0x1>
 454:	87 ec       	ldi	r24, 0xC7	; 199
 456:	9f ea       	ldi	r25, 0xAF	; 175
 458:	01 97       	sbiw	r24, 0x01	; 1
 45a:	f1 f7       	brne	.-4      	; 0x458 <T+0x44>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <T+0x4a>
 45e:	00 00       	nop
 460:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <BAUD>
 464:	90 91 b3 02 	lds	r25, 0x02B3	; 0x8002b3 <BAUD+0x1>
 468:	a0 91 b4 02 	lds	r26, 0x02B4	; 0x8002b4 <BAUD+0x2>
 46c:	b0 91 b5 02 	lds	r27, 0x02B5	; 0x8002b5 <BAUD+0x3>
 470:	81 3b       	cpi	r24, 0xB1	; 177
 472:	94 40       	sbci	r25, 0x04	; 4
 474:	a1 05       	cpc	r26, r1
 476:	b1 05       	cpc	r27, r1
 478:	4c f4       	brge	.+18     	; 0x48c <__stack+0x2d>
 47a:	8f e3       	ldi	r24, 0x3F	; 63
 47c:	9d e0       	ldi	r25, 0x0D	; 13
 47e:	23 e0       	ldi	r18, 0x03	; 3
 480:	81 50       	subi	r24, 0x01	; 1
 482:	90 40       	sbci	r25, 0x00	; 0
 484:	20 40       	sbci	r18, 0x00	; 0
 486:	e1 f7       	brne	.-8      	; 0x480 <__stack+0x21>
 488:	00 c0       	rjmp	.+0      	; 0x48a <__stack+0x2b>
 48a:	00 00       	nop
 48c:	08 95       	ret

0000048e <USART_TxChar>:
 48e:	5d 9b       	sbis	0x0b, 5	; 11
 490:	fe cf       	rjmp	.-4      	; 0x48e <USART_TxChar>
 492:	8c b9       	out	0x0c, r24	; 12
 494:	08 95       	ret

00000496 <USART_Send>:
 496:	0f 93       	push	r16
 498:	1f 93       	push	r17
 49a:	cf 93       	push	r28
 49c:	df 93       	push	r29
 49e:	8c 01       	movw	r16, r24
 4a0:	c0 e0       	ldi	r28, 0x00	; 0
 4a2:	d0 e0       	ldi	r29, 0x00	; 0
 4a4:	05 c0       	rjmp	.+10     	; 0x4b0 <USART_Send+0x1a>
 4a6:	0e 94 47 02 	call	0x48e	; 0x48e <USART_TxChar>
 4aa:	0e 94 0a 02 	call	0x414	; 0x414 <T>
 4ae:	21 96       	adiw	r28, 0x01	; 1
 4b0:	f8 01       	movw	r30, r16
 4b2:	ec 0f       	add	r30, r28
 4b4:	fd 1f       	adc	r31, r29
 4b6:	80 81       	ld	r24, Z
 4b8:	81 11       	cpse	r24, r1
 4ba:	f5 cf       	rjmp	.-22     	; 0x4a6 <USART_Send+0x10>
 4bc:	df 91       	pop	r29
 4be:	cf 91       	pop	r28
 4c0:	1f 91       	pop	r17
 4c2:	0f 91       	pop	r16
 4c4:	08 95       	ret

000004c6 <I2C_Init>:
 4c6:	11 b8       	out	0x01, r1	; 1
 4c8:	81 e1       	ldi	r24, 0x11	; 17
 4ca:	80 b9       	out	0x00, r24	; 0
 4cc:	08 95       	ret

000004ce <I2C_Start>:
 4ce:	94 ea       	ldi	r25, 0xA4	; 164
 4d0:	96 bf       	out	0x36, r25	; 54
 4d2:	06 b6       	in	r0, 0x36	; 54
 4d4:	07 fe       	sbrs	r0, 7
 4d6:	fd cf       	rjmp	.-6      	; 0x4d2 <I2C_Start+0x4>
 4d8:	91 b1       	in	r25, 0x01	; 1
 4da:	98 7f       	andi	r25, 0xF8	; 248
 4dc:	98 30       	cpi	r25, 0x08	; 8
 4de:	71 f4       	brne	.+28     	; 0x4fc <I2C_Start+0x2e>
 4e0:	83 b9       	out	0x03, r24	; 3
 4e2:	84 e8       	ldi	r24, 0x84	; 132
 4e4:	86 bf       	out	0x36, r24	; 54
 4e6:	06 b6       	in	r0, 0x36	; 54
 4e8:	07 fe       	sbrs	r0, 7
 4ea:	fd cf       	rjmp	.-6      	; 0x4e6 <I2C_Start+0x18>
 4ec:	81 b1       	in	r24, 0x01	; 1
 4ee:	88 7f       	andi	r24, 0xF8	; 248
 4f0:	88 31       	cpi	r24, 0x18	; 24
 4f2:	31 f0       	breq	.+12     	; 0x500 <I2C_Start+0x32>
 4f4:	80 32       	cpi	r24, 0x20	; 32
 4f6:	31 f4       	brne	.+12     	; 0x504 <I2C_Start+0x36>
 4f8:	82 e0       	ldi	r24, 0x02	; 2
 4fa:	08 95       	ret
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	08 95       	ret
 500:	81 e0       	ldi	r24, 0x01	; 1
 502:	08 95       	ret
 504:	83 e0       	ldi	r24, 0x03	; 3
 506:	08 95       	ret

00000508 <I2C_Repeated_Start>:
 508:	94 ea       	ldi	r25, 0xA4	; 164
 50a:	96 bf       	out	0x36, r25	; 54
 50c:	06 b6       	in	r0, 0x36	; 54
 50e:	07 fe       	sbrs	r0, 7
 510:	fd cf       	rjmp	.-6      	; 0x50c <I2C_Repeated_Start+0x4>
 512:	91 b1       	in	r25, 0x01	; 1
 514:	98 7f       	andi	r25, 0xF8	; 248
 516:	90 31       	cpi	r25, 0x10	; 16
 518:	71 f4       	brne	.+28     	; 0x536 <I2C_Repeated_Start+0x2e>
 51a:	83 b9       	out	0x03, r24	; 3
 51c:	84 e8       	ldi	r24, 0x84	; 132
 51e:	86 bf       	out	0x36, r24	; 54
 520:	06 b6       	in	r0, 0x36	; 54
 522:	07 fe       	sbrs	r0, 7
 524:	fd cf       	rjmp	.-6      	; 0x520 <I2C_Repeated_Start+0x18>
 526:	81 b1       	in	r24, 0x01	; 1
 528:	88 7f       	andi	r24, 0xF8	; 248
 52a:	80 34       	cpi	r24, 0x40	; 64
 52c:	31 f0       	breq	.+12     	; 0x53a <I2C_Repeated_Start+0x32>
 52e:	80 32       	cpi	r24, 0x20	; 32
 530:	31 f4       	brne	.+12     	; 0x53e <I2C_Repeated_Start+0x36>
 532:	82 e0       	ldi	r24, 0x02	; 2
 534:	08 95       	ret
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	08 95       	ret
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	08 95       	ret
 53e:	83 e0       	ldi	r24, 0x03	; 3
 540:	08 95       	ret

00000542 <I2C_Stop>:
 542:	84 e9       	ldi	r24, 0x94	; 148
 544:	86 bf       	out	0x36, r24	; 54
 546:	06 b6       	in	r0, 0x36	; 54
 548:	04 fc       	sbrc	r0, 4
 54a:	fd cf       	rjmp	.-6      	; 0x546 <I2C_Stop+0x4>
 54c:	08 95       	ret

0000054e <I2C_Write>:
 54e:	83 b9       	out	0x03, r24	; 3
 550:	84 e8       	ldi	r24, 0x84	; 132
 552:	86 bf       	out	0x36, r24	; 54
 554:	06 b6       	in	r0, 0x36	; 54
 556:	07 fe       	sbrs	r0, 7
 558:	fd cf       	rjmp	.-6      	; 0x554 <I2C_Write+0x6>
 55a:	81 b1       	in	r24, 0x01	; 1
 55c:	88 7f       	andi	r24, 0xF8	; 248
 55e:	88 32       	cpi	r24, 0x28	; 40
 560:	21 f0       	breq	.+8      	; 0x56a <I2C_Write+0x1c>
 562:	80 33       	cpi	r24, 0x30	; 48
 564:	21 f4       	brne	.+8      	; 0x56e <I2C_Write+0x20>
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	08 95       	ret
 56a:	80 e0       	ldi	r24, 0x00	; 0
 56c:	08 95       	ret
 56e:	82 e0       	ldi	r24, 0x02	; 2
 570:	08 95       	ret

00000572 <I2C_Read_Ack>:
 572:	84 ec       	ldi	r24, 0xC4	; 196
 574:	86 bf       	out	0x36, r24	; 54
 576:	06 b6       	in	r0, 0x36	; 54
 578:	07 fe       	sbrs	r0, 7
 57a:	fd cf       	rjmp	.-6      	; 0x576 <I2C_Read_Ack+0x4>
 57c:	83 b1       	in	r24, 0x03	; 3
 57e:	08 95       	ret

00000580 <I2C_Read_Nack>:
 580:	84 e8       	ldi	r24, 0x84	; 132
 582:	86 bf       	out	0x36, r24	; 54
 584:	06 b6       	in	r0, 0x36	; 54
 586:	07 fe       	sbrs	r0, 7
 588:	fd cf       	rjmp	.-6      	; 0x584 <I2C_Read_Nack+0x4>
 58a:	83 b1       	in	r24, 0x03	; 3
 58c:	08 95       	ret

0000058e <RTC_Clock_Write>:
 58e:	1f 93       	push	r17
 590:	cf 93       	push	r28
 592:	df 93       	push	r29
 594:	32 2f       	mov	r19, r18
 596:	9d ec       	ldi	r25, 0xCD	; 205
 598:	49 9f       	mul	r20, r25
 59a:	51 2d       	mov	r21, r1
 59c:	11 24       	eor	r1, r1
 59e:	56 95       	lsr	r21
 5a0:	56 95       	lsr	r21
 5a2:	56 95       	lsr	r21
 5a4:	20 e1       	ldi	r18, 0x10	; 16
 5a6:	52 9f       	mul	r21, r18
 5a8:	f0 01       	movw	r30, r0
 5aa:	11 24       	eor	r1, r1
 5ac:	55 0f       	add	r21, r21
 5ae:	25 2f       	mov	r18, r21
 5b0:	22 0f       	add	r18, r18
 5b2:	22 0f       	add	r18, r18
 5b4:	52 0f       	add	r21, r18
 5b6:	45 1b       	sub	r20, r21
 5b8:	d4 2f       	mov	r29, r20
 5ba:	de 2b       	or	r29, r30
 5bc:	69 9f       	mul	r22, r25
 5be:	51 2d       	mov	r21, r1
 5c0:	11 24       	eor	r1, r1
 5c2:	56 95       	lsr	r21
 5c4:	56 95       	lsr	r21
 5c6:	56 95       	lsr	r21
 5c8:	20 e1       	ldi	r18, 0x10	; 16
 5ca:	52 9f       	mul	r21, r18
 5cc:	f0 01       	movw	r30, r0
 5ce:	11 24       	eor	r1, r1
 5d0:	55 0f       	add	r21, r21
 5d2:	25 2f       	mov	r18, r21
 5d4:	22 0f       	add	r18, r18
 5d6:	22 0f       	add	r18, r18
 5d8:	52 0f       	add	r21, r18
 5da:	65 1b       	sub	r22, r21
 5dc:	16 2f       	mov	r17, r22
 5de:	1e 2b       	or	r17, r30
 5e0:	89 9f       	mul	r24, r25
 5e2:	91 2d       	mov	r25, r1
 5e4:	11 24       	eor	r1, r1
 5e6:	96 95       	lsr	r25
 5e8:	96 95       	lsr	r25
 5ea:	96 95       	lsr	r25
 5ec:	20 e1       	ldi	r18, 0x10	; 16
 5ee:	92 9f       	mul	r25, r18
 5f0:	a0 01       	movw	r20, r0
 5f2:	11 24       	eor	r1, r1
 5f4:	99 0f       	add	r25, r25
 5f6:	29 2f       	mov	r18, r25
 5f8:	22 0f       	add	r18, r18
 5fa:	22 0f       	add	r18, r18
 5fc:	92 0f       	add	r25, r18
 5fe:	89 1b       	sub	r24, r25
 600:	84 2b       	or	r24, r20
 602:	90 e2       	ldi	r25, 0x20	; 32
 604:	39 9f       	mul	r19, r25
 606:	90 01       	movw	r18, r0
 608:	11 24       	eor	r1, r1
 60a:	28 2b       	or	r18, r24
 60c:	c2 2f       	mov	r28, r18
 60e:	c0 64       	ori	r28, 0x40	; 64
 610:	80 ed       	ldi	r24, 0xD0	; 208
 612:	0e 94 67 02 	call	0x4ce	; 0x4ce <I2C_Start>
 616:	80 e0       	ldi	r24, 0x00	; 0
 618:	0e 94 a7 02 	call	0x54e	; 0x54e <I2C_Write>
 61c:	8d 2f       	mov	r24, r29
 61e:	0e 94 a7 02 	call	0x54e	; 0x54e <I2C_Write>
 622:	81 2f       	mov	r24, r17
 624:	0e 94 a7 02 	call	0x54e	; 0x54e <I2C_Write>
 628:	8c 2f       	mov	r24, r28
 62a:	0e 94 a7 02 	call	0x54e	; 0x54e <I2C_Write>
 62e:	0e 94 a1 02 	call	0x542	; 0x542 <I2C_Stop>
 632:	df 91       	pop	r29
 634:	cf 91       	pop	r28
 636:	1f 91       	pop	r17
 638:	08 95       	ret

0000063a <RTC_Clock_Read>:
 63a:	cf 93       	push	r28
 63c:	df 93       	push	r29
 63e:	ec 01       	movw	r28, r24
 640:	80 ed       	ldi	r24, 0xD0	; 208
 642:	0e 94 67 02 	call	0x4ce	; 0x4ce <I2C_Start>
 646:	80 e0       	ldi	r24, 0x00	; 0
 648:	0e 94 a7 02 	call	0x54e	; 0x54e <I2C_Write>
 64c:	81 ed       	ldi	r24, 0xD1	; 209
 64e:	0e 94 84 02 	call	0x508	; 0x508 <I2C_Repeated_Start>
 652:	0e 94 b9 02 	call	0x572	; 0x572 <I2C_Read_Ack>
 656:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <second>
 65a:	0e 94 b9 02 	call	0x572	; 0x572 <I2C_Read_Ack>
 65e:	80 93 b7 02 	sts	0x02B7, r24	; 0x8002b7 <minute>
 662:	0e 94 c0 02 	call	0x580	; 0x580 <I2C_Read_Nack>
 666:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <hour>
 66a:	0e 94 a1 02 	call	0x542	; 0x542 <I2C_Stop>
 66e:	50 91 ba 02 	lds	r21, 0x02BA	; 0x8002ba <hour>
 672:	65 2f       	mov	r22, r21
 674:	60 72       	andi	r22, 0x20	; 32
 676:	40 91 b6 02 	lds	r20, 0x02B6	; 0x8002b6 <second>
 67a:	24 2f       	mov	r18, r20
 67c:	20 77       	andi	r18, 0x70	; 112
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	35 95       	asr	r19
 682:	27 95       	ror	r18
 684:	35 95       	asr	r19
 686:	27 95       	ror	r18
 688:	35 95       	asr	r19
 68a:	27 95       	ror	r18
 68c:	35 95       	asr	r19
 68e:	27 95       	ror	r18
 690:	84 2f       	mov	r24, r20
 692:	8f 70       	andi	r24, 0x0F	; 15
 694:	22 0f       	add	r18, r18
 696:	42 2f       	mov	r20, r18
 698:	44 0f       	add	r20, r20
 69a:	44 0f       	add	r20, r20
 69c:	24 0f       	add	r18, r20
 69e:	48 2f       	mov	r20, r24
 6a0:	42 0f       	add	r20, r18
 6a2:	40 93 b6 02 	sts	0x02B6, r20	; 0x8002b6 <second>
 6a6:	80 91 b7 02 	lds	r24, 0x02B7	; 0x8002b7 <minute>
 6aa:	28 2f       	mov	r18, r24
 6ac:	20 77       	andi	r18, 0x70	; 112
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	35 95       	asr	r19
 6b2:	27 95       	ror	r18
 6b4:	35 95       	asr	r19
 6b6:	27 95       	ror	r18
 6b8:	35 95       	asr	r19
 6ba:	27 95       	ror	r18
 6bc:	35 95       	asr	r19
 6be:	27 95       	ror	r18
 6c0:	98 2f       	mov	r25, r24
 6c2:	9f 70       	andi	r25, 0x0F	; 15
 6c4:	22 0f       	add	r18, r18
 6c6:	82 2f       	mov	r24, r18
 6c8:	88 0f       	add	r24, r24
 6ca:	88 0f       	add	r24, r24
 6cc:	28 0f       	add	r18, r24
 6ce:	29 0f       	add	r18, r25
 6d0:	20 93 b7 02 	sts	0x02B7, r18	; 0x8002b7 <minute>
 6d4:	85 2f       	mov	r24, r21
 6d6:	80 71       	andi	r24, 0x10	; 16
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	95 95       	asr	r25
 6dc:	87 95       	ror	r24
 6de:	95 95       	asr	r25
 6e0:	87 95       	ror	r24
 6e2:	95 95       	asr	r25
 6e4:	87 95       	ror	r24
 6e6:	95 95       	asr	r25
 6e8:	87 95       	ror	r24
 6ea:	5f 70       	andi	r21, 0x0F	; 15
 6ec:	88 0f       	add	r24, r24
 6ee:	98 2f       	mov	r25, r24
 6f0:	99 0f       	add	r25, r25
 6f2:	99 0f       	add	r25, r25
 6f4:	89 0f       	add	r24, r25
 6f6:	85 0f       	add	r24, r21
 6f8:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <hour>
 6fc:	48 83       	st	Y, r20
 6fe:	80 91 b7 02 	lds	r24, 0x02B7	; 0x8002b7 <minute>
 702:	89 83       	std	Y+1, r24	; 0x01
 704:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <hour>
 708:	8a 83       	std	Y+2, r24	; 0x02
 70a:	6b 83       	std	Y+3, r22	; 0x03
 70c:	df 91       	pop	r29
 70e:	cf 91       	pop	r28
 710:	08 95       	ret

00000712 <RTC_Calendar_Read>:




void RTC_Calendar_Read(uint8_t*str)
{
 712:	cf 93       	push	r28
 714:	df 93       	push	r29
 716:	ec 01       	movw	r28, r24
	I2C_Start(Device_Write_address);
 718:	80 ed       	ldi	r24, 0xD0	; 208
 71a:	0e 94 67 02 	call	0x4ce	; 0x4ce <I2C_Start>
	I2C_Write(3);
 71e:	83 e0       	ldi	r24, 0x03	; 3
 720:	0e 94 a7 02 	call	0x54e	; 0x54e <I2C_Write>
	I2C_Repeated_Start(Device_Read_address);
 724:	81 ed       	ldi	r24, 0xD1	; 209
 726:	0e 94 84 02 	call	0x508	; 0x508 <I2C_Repeated_Start>

	day = I2C_Read_Ack();		/* Read day */
 72a:	0e 94 b9 02 	call	0x572	; 0x572 <I2C_Read_Ack>
 72e:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <day>
	date = I2C_Read_Ack();		/* Read date */
 732:	0e 94 b9 02 	call	0x572	; 0x572 <I2C_Read_Ack>
 736:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <date>
	month = I2C_Read_Ack();		/* Read month */
 73a:	0e 94 b9 02 	call	0x572	; 0x572 <I2C_Read_Ack>
 73e:	80 93 b1 02 	sts	0x02B1, r24	; 0x8002b1 <month>
	year = I2C_Read_Nack();		/* Read the year with Nack */
 742:	0e 94 c0 02 	call	0x580	; 0x580 <I2C_Read_Nack>
 746:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <year>
	I2C_Stop();			/* Stop i2C communication */
 74a:	0e 94 a1 02 	call	0x542	; 0x542 <I2C_Stop>
	
	date= (date&0b00001111)+(((date&0b00110000)>>4)*10);
 74e:	30 91 bd 02 	lds	r19, 0x02BD	; 0x8002bd <date>
 752:	83 2f       	mov	r24, r19
 754:	80 73       	andi	r24, 0x30	; 48
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	95 95       	asr	r25
 75a:	87 95       	ror	r24
 75c:	95 95       	asr	r25
 75e:	87 95       	ror	r24
 760:	95 95       	asr	r25
 762:	87 95       	ror	r24
 764:	95 95       	asr	r25
 766:	87 95       	ror	r24
 768:	93 2f       	mov	r25, r19
 76a:	9f 70       	andi	r25, 0x0F	; 15
 76c:	88 0f       	add	r24, r24
 76e:	38 2f       	mov	r19, r24
 770:	33 0f       	add	r19, r19
 772:	33 0f       	add	r19, r19
 774:	83 0f       	add	r24, r19
 776:	39 2f       	mov	r19, r25
 778:	38 0f       	add	r19, r24
 77a:	30 93 bd 02 	sts	0x02BD, r19	; 0x8002bd <date>
		month= (month&0b00001111)+(((month&0b00010000)>>4)*10);
 77e:	20 91 b1 02 	lds	r18, 0x02B1	; 0x8002b1 <month>
 782:	82 2f       	mov	r24, r18
 784:	80 71       	andi	r24, 0x10	; 16
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	95 95       	asr	r25
 78a:	87 95       	ror	r24
 78c:	95 95       	asr	r25
 78e:	87 95       	ror	r24
 790:	95 95       	asr	r25
 792:	87 95       	ror	r24
 794:	95 95       	asr	r25
 796:	87 95       	ror	r24
 798:	2f 70       	andi	r18, 0x0F	; 15
 79a:	88 0f       	add	r24, r24
 79c:	98 2f       	mov	r25, r24
 79e:	99 0f       	add	r25, r25
 7a0:	99 0f       	add	r25, r25
 7a2:	89 0f       	add	r24, r25
 7a4:	82 0f       	add	r24, r18
 7a6:	80 93 b1 02 	sts	0x02B1, r24	; 0x8002b1 <month>
		year= (year&0b00001111)+(((year&0b11110000)>>4)*10);
 7aa:	20 91 bb 02 	lds	r18, 0x02BB	; 0x8002bb <year>
 7ae:	92 2f       	mov	r25, r18
 7b0:	92 95       	swap	r25
 7b2:	9f 70       	andi	r25, 0x0F	; 15
 7b4:	42 2f       	mov	r20, r18
 7b6:	4f 70       	andi	r20, 0x0F	; 15
 7b8:	99 0f       	add	r25, r25
 7ba:	29 2f       	mov	r18, r25
 7bc:	22 0f       	add	r18, r18
 7be:	22 0f       	add	r18, r18
 7c0:	92 0f       	add	r25, r18
 7c2:	94 0f       	add	r25, r20
 7c4:	90 93 bb 02 	sts	0x02BB, r25	; 0x8002bb <year>
	str[4]=day;
 7c8:	20 91 bc 02 	lds	r18, 0x02BC	; 0x8002bc <day>
 7cc:	2c 83       	std	Y+4, r18	; 0x04
	str[5]=date;
 7ce:	3d 83       	std	Y+5, r19	; 0x05
	str[6]=month;
 7d0:	8e 83       	std	Y+6, r24	; 0x06
	str[7]=year;
 7d2:	9f 83       	std	Y+7, r25	; 0x07
}
 7d4:	df 91       	pop	r29
 7d6:	cf 91       	pop	r28
 7d8:	08 95       	ret

000007da <main>:


//char day[6] =["Sun","Mon","Tue","Wen","Thu","Fri","Sat"];

int main(void)
{
 7da:	cf 93       	push	r28
 7dc:	df 93       	push	r29
 7de:	cd b7       	in	r28, 0x3d	; 61
 7e0:	de b7       	in	r29, 0x3e	; 62
 7e2:	28 97       	sbiw	r28, 0x08	; 8
 7e4:	0f b6       	in	r0, 0x3f	; 63
 7e6:	f8 94       	cli
 7e8:	de bf       	out	0x3e, r29	; 62
 7ea:	0f be       	out	0x3f, r0	; 63
 7ec:	cd bf       	out	0x3d, r28	; 61
	//Create register to store time & date
	uint8_t CurrentTimeRegister[8];
	
	DDRB =0xFF;
 7ee:	8f ef       	ldi	r24, 0xFF	; 255
 7f0:	87 bb       	out	0x17, r24	; 23
	//Start Communications
	USART_init(0,8,57600);
 7f2:	20 e0       	ldi	r18, 0x00	; 0
 7f4:	31 ee       	ldi	r19, 0xE1	; 225
 7f6:	40 e0       	ldi	r20, 0x00	; 0
 7f8:	50 e0       	ldi	r21, 0x00	; 0
 7fa:	68 e0       	ldi	r22, 0x08	; 8
 7fc:	70 e0       	ldi	r23, 0x00	; 0
 7fe:	80 e0       	ldi	r24, 0x00	; 0
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	0e 94 84 01 	call	0x308	; 0x308 <USART_init>
	I2C_Init();
 806:	0e 94 63 02 	call	0x4c6	; 0x4c6 <I2C_Init>
	LCD_Init(4);
 80a:	84 e0       	ldi	r24, 0x04	; 4
 80c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <LCD_Init>

	USART_Send("\r\nHello Void. I have awoken\r\n Response | ");
 810:	85 e6       	ldi	r24, 0x65	; 101
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	0e 94 4b 02 	call	0x496	; 0x496 <USART_Send>

	RTC_Clock_Write(4,50,30,1);
 818:	21 e0       	ldi	r18, 0x01	; 1
 81a:	4e e1       	ldi	r20, 0x1E	; 30
 81c:	62 e3       	ldi	r22, 0x32	; 50
 81e:	84 e0       	ldi	r24, 0x04	; 4
 820:	0e 94 c7 02 	call	0x58e	; 0x58e <RTC_Clock_Write>

	while (1)
	{

		RTC_Clock_Read(CurrentTimeRegister);
 824:	ce 01       	movw	r24, r28
 826:	01 96       	adiw	r24, 0x01	; 1
 828:	0e 94 1d 03 	call	0x63a	; 0x63a <RTC_Clock_Read>
		RTC_Calendar_Read(CurrentTimeRegister);
 82c:	ce 01       	movw	r24, r28
 82e:	01 96       	adiw	r24, 0x01	; 1
 830:	0e 94 89 03 	call	0x712	; 0x712 <RTC_Calendar_Read>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 834:	2f ef       	ldi	r18, 0xFF	; 255
 836:	88 e0       	ldi	r24, 0x08	; 8
 838:	9d e3       	ldi	r25, 0x3D	; 61
 83a:	21 50       	subi	r18, 0x01	; 1
 83c:	80 40       	sbci	r24, 0x00	; 0
 83e:	90 40       	sbci	r25, 0x00	; 0
 840:	e1 f7       	brne	.-8      	; 0x83a <main+0x60>
 842:	00 c0       	rjmp	.+0      	; 0x844 <main+0x6a>
 844:	00 00       	nop

		_delay_ms(1000);
		LCD_Clear();
 846:	0e 94 26 01 	call	0x24c	; 0x24c <LCD_Clear>
		LCD_Set_Cursor(0,0);
 84a:	60 e0       	ldi	r22, 0x00	; 0
 84c:	70 e0       	ldi	r23, 0x00	; 0
 84e:	80 e0       	ldi	r24, 0x00	; 0
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	0e 94 2a 01 	call	0x254	; 0x254 <LCD_Set_Cursor>

		LCD_Int_Str(CurrentTimeRegister[2],10);
 856:	8b 81       	ldd	r24, Y+3	; 0x03
 858:	6a e0       	ldi	r22, 0x0A	; 10
 85a:	70 e0       	ldi	r23, 0x00	; 0
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Int_Str>
		LCD_String(":");
 862:	8f e8       	ldi	r24, 0x8F	; 143
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	0e 94 40 01 	call	0x280	; 0x280 <LCD_String>
		LCD_Int_Str(CurrentTimeRegister[1],10);
 86a:	8a 81       	ldd	r24, Y+2	; 0x02
 86c:	6a e0       	ldi	r22, 0x0A	; 10
 86e:	70 e0       	ldi	r23, 0x00	; 0
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Int_Str>
		LCD_String(":");
 876:	8f e8       	ldi	r24, 0x8F	; 143
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	0e 94 40 01 	call	0x280	; 0x280 <LCD_String>
		LCD_Int_Str(CurrentTimeRegister[0],10);
 87e:	89 81       	ldd	r24, Y+1	; 0x01
 880:	6a e0       	ldi	r22, 0x0A	; 10
 882:	70 e0       	ldi	r23, 0x00	; 0
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Int_Str>

		if (CurrentTimeRegister[3]==0)
 88a:	8c 81       	ldd	r24, Y+4	; 0x04
 88c:	81 11       	cpse	r24, r1
 88e:	05 c0       	rjmp	.+10     	; 0x89a <main+0xc0>
		LCD_String(" AM");
 890:	81 e9       	ldi	r24, 0x91	; 145
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	0e 94 40 01 	call	0x280	; 0x280 <LCD_String>
 898:	04 c0       	rjmp	.+8      	; 0x8a2 <main+0xc8>
		else
		LCD_String(" PM");
 89a:	85 e9       	ldi	r24, 0x95	; 149
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	0e 94 40 01 	call	0x280	; 0x280 <LCD_String>

		LCD_Set_Cursor(1,0);
 8a2:	60 e0       	ldi	r22, 0x00	; 0
 8a4:	70 e0       	ldi	r23, 0x00	; 0
 8a6:	81 e0       	ldi	r24, 0x01	; 1
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	0e 94 2a 01 	call	0x254	; 0x254 <LCD_Set_Cursor>
		LCD_Int_Str(CurrentTimeRegister[4],10);
 8ae:	8d 81       	ldd	r24, Y+5	; 0x05
 8b0:	6a e0       	ldi	r22, 0x0A	; 10
 8b2:	70 e0       	ldi	r23, 0x00	; 0
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Int_Str>
		LCD_String("  ");
 8ba:	89 e9       	ldi	r24, 0x99	; 153
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	0e 94 40 01 	call	0x280	; 0x280 <LCD_String>
		LCD_Int_Str(CurrentTimeRegister[6],10);
 8c2:	8f 81       	ldd	r24, Y+7	; 0x07
 8c4:	6a e0       	ldi	r22, 0x0A	; 10
 8c6:	70 e0       	ldi	r23, 0x00	; 0
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Int_Str>
		LCD_String("/");
 8ce:	8c e9       	ldi	r24, 0x9C	; 156
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	0e 94 40 01 	call	0x280	; 0x280 <LCD_String>
		LCD_Int_Str(CurrentTimeRegister[5],10);
 8d6:	8e 81       	ldd	r24, Y+6	; 0x06
 8d8:	6a e0       	ldi	r22, 0x0A	; 10
 8da:	70 e0       	ldi	r23, 0x00	; 0
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Int_Str>
		LCD_String("/");
 8e2:	8c e9       	ldi	r24, 0x9C	; 156
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	0e 94 40 01 	call	0x280	; 0x280 <LCD_String>
		LCD_Int_Str(CurrentTimeRegister[7],10);
 8ea:	88 85       	ldd	r24, Y+8	; 0x08
 8ec:	6a e0       	ldi	r22, 0x0A	; 10
 8ee:	70 e0       	ldi	r23, 0x00	; 0
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Int_Str>

	}
 8f6:	96 cf       	rjmp	.-212    	; 0x824 <main+0x4a>

000008f8 <__udivmodsi4>:
 8f8:	a1 e2       	ldi	r26, 0x21	; 33
 8fa:	1a 2e       	mov	r1, r26
 8fc:	aa 1b       	sub	r26, r26
 8fe:	bb 1b       	sub	r27, r27
 900:	fd 01       	movw	r30, r26
 902:	0d c0       	rjmp	.+26     	; 0x91e <__udivmodsi4_ep>

00000904 <__udivmodsi4_loop>:
 904:	aa 1f       	adc	r26, r26
 906:	bb 1f       	adc	r27, r27
 908:	ee 1f       	adc	r30, r30
 90a:	ff 1f       	adc	r31, r31
 90c:	a2 17       	cp	r26, r18
 90e:	b3 07       	cpc	r27, r19
 910:	e4 07       	cpc	r30, r20
 912:	f5 07       	cpc	r31, r21
 914:	20 f0       	brcs	.+8      	; 0x91e <__udivmodsi4_ep>
 916:	a2 1b       	sub	r26, r18
 918:	b3 0b       	sbc	r27, r19
 91a:	e4 0b       	sbc	r30, r20
 91c:	f5 0b       	sbc	r31, r21

0000091e <__udivmodsi4_ep>:
 91e:	66 1f       	adc	r22, r22
 920:	77 1f       	adc	r23, r23
 922:	88 1f       	adc	r24, r24
 924:	99 1f       	adc	r25, r25
 926:	1a 94       	dec	r1
 928:	69 f7       	brne	.-38     	; 0x904 <__udivmodsi4_loop>
 92a:	60 95       	com	r22
 92c:	70 95       	com	r23
 92e:	80 95       	com	r24
 930:	90 95       	com	r25
 932:	9b 01       	movw	r18, r22
 934:	ac 01       	movw	r20, r24
 936:	bd 01       	movw	r22, r26
 938:	cf 01       	movw	r24, r30
 93a:	08 95       	ret

0000093c <itoa>:
 93c:	45 32       	cpi	r20, 0x25	; 37
 93e:	51 05       	cpc	r21, r1
 940:	20 f4       	brcc	.+8      	; 0x94a <itoa+0xe>
 942:	42 30       	cpi	r20, 0x02	; 2
 944:	10 f0       	brcs	.+4      	; 0x94a <itoa+0xe>
 946:	0c 94 a9 04 	jmp	0x952	; 0x952 <__itoa_ncheck>
 94a:	fb 01       	movw	r30, r22
 94c:	10 82       	st	Z, r1
 94e:	cb 01       	movw	r24, r22
 950:	08 95       	ret

00000952 <__itoa_ncheck>:
 952:	bb 27       	eor	r27, r27
 954:	4a 30       	cpi	r20, 0x0A	; 10
 956:	31 f4       	brne	.+12     	; 0x964 <__itoa_ncheck+0x12>
 958:	99 23       	and	r25, r25
 95a:	22 f4       	brpl	.+8      	; 0x964 <__itoa_ncheck+0x12>
 95c:	bd e2       	ldi	r27, 0x2D	; 45
 95e:	90 95       	com	r25
 960:	81 95       	neg	r24
 962:	9f 4f       	sbci	r25, 0xFF	; 255
 964:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__utoa_common>

00000968 <__utoa_ncheck>:
 968:	bb 27       	eor	r27, r27

0000096a <__utoa_common>:
 96a:	fb 01       	movw	r30, r22
 96c:	55 27       	eor	r21, r21
 96e:	aa 27       	eor	r26, r26
 970:	88 0f       	add	r24, r24
 972:	99 1f       	adc	r25, r25
 974:	aa 1f       	adc	r26, r26
 976:	a4 17       	cp	r26, r20
 978:	10 f0       	brcs	.+4      	; 0x97e <__utoa_common+0x14>
 97a:	a4 1b       	sub	r26, r20
 97c:	83 95       	inc	r24
 97e:	50 51       	subi	r21, 0x10	; 16
 980:	b9 f7       	brne	.-18     	; 0x970 <__utoa_common+0x6>
 982:	a0 5d       	subi	r26, 0xD0	; 208
 984:	aa 33       	cpi	r26, 0x3A	; 58
 986:	08 f0       	brcs	.+2      	; 0x98a <__utoa_common+0x20>
 988:	a9 5d       	subi	r26, 0xD9	; 217
 98a:	a1 93       	st	Z+, r26
 98c:	00 97       	sbiw	r24, 0x00	; 0
 98e:	79 f7       	brne	.-34     	; 0x96e <__utoa_common+0x4>
 990:	b1 11       	cpse	r27, r1
 992:	b1 93       	st	Z+, r27
 994:	11 92       	st	Z+, r1
 996:	cb 01       	movw	r24, r22
 998:	0c 94 ce 04 	jmp	0x99c	; 0x99c <strrev>

0000099c <strrev>:
 99c:	dc 01       	movw	r26, r24
 99e:	fc 01       	movw	r30, r24
 9a0:	67 2f       	mov	r22, r23
 9a2:	71 91       	ld	r23, Z+
 9a4:	77 23       	and	r23, r23
 9a6:	e1 f7       	brne	.-8      	; 0x9a0 <strrev+0x4>
 9a8:	32 97       	sbiw	r30, 0x02	; 2
 9aa:	04 c0       	rjmp	.+8      	; 0x9b4 <strrev+0x18>
 9ac:	7c 91       	ld	r23, X
 9ae:	6d 93       	st	X+, r22
 9b0:	70 83       	st	Z, r23
 9b2:	62 91       	ld	r22, -Z
 9b4:	ae 17       	cp	r26, r30
 9b6:	bf 07       	cpc	r27, r31
 9b8:	c8 f3       	brcs	.-14     	; 0x9ac <strrev+0x10>
 9ba:	08 95       	ret

000009bc <_exit>:
 9bc:	f8 94       	cli

000009be <__stop_program>:
 9be:	ff cf       	rjmp	.-2      	; 0x9be <__stop_program>
